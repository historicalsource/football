	.TITLE FBINT
	.RADIX 16
	.ASECT
	.IIF NDF,NTB,NTB=1
	.GLOBL EOZP,$COINA,$LAM,$LMBIT,$CNSTT,$PSTSL
	.GLOBL $CCTIM,$LMTIM,$INTCT
	.GLOBL EOPROG
	.INCLUDE FBCOMN
	.PAGE
	.SBTTL INTERRUPT
	.CSECT
;ENTERED 4 TIMES/FRAME, AT LINES 64, 128, 192, & 240.
IRQ:	PHA			;SAVE REGS
	TXA
	PHA
	TYA
	PHA
	CLD			;SET HEX
	.SBTTL	SOFTWARE WATCHDOG
;BELOW CODE CHECKS S.P., P.C. & PSW FOOR VALIDITY
	TSX			;X <- SP
	BPL 86$			;STACK TOO DEEP, ABORT
	LDA AX,104		;GET OLD PSW
	AND I,10		;BREAK?
	BNE 86$			;YES, ABORT
	LDA AX,106		;PCH
	CMP I,PROG/100		;CHECK LOW LIMIT
	BCC 86$
	LDA AX,105
	CMP I,0
	.=.-1
	.WORD FTAB
	.=.-1
	LDA AX,106
	SBC I,0
	.=.-1
	.ENABL M68
	.WORD FTAB
	.DSABL M68
	.=.-1

;ABOVE 12 LINES DOES A D.P. COMPARE OF PC:FTAB

	BCC 5$			;IF BORROW, P.C. IS IN BOUNDS
86$:	JMP RESET		;ABORT ENTRY, DO POWER-ON

5$:	LDA SYNC		;CHECK SYNC WORD
	CMP I,6
	BCS 86$

;IF SYNC >= 6, PROCESSOR IS IN "PHANTOM-LOOP"

	STA A,WTCHDG		;ALL O.K., HIT DOG
	LDA A,INPORT		;INPORT HAS TRACK-BALL COUNTERS FOR 0
	STA TBCTR
	LDA A,INPORT+2		;COUNTERS FOR 2
	STA TBCTR+2
	LDA TOUT1		;GET WHAT'S SUPPOSED TO BE IN "OUT1"
	TAX			;SAVE IT
	ORA I,20		;HAVE IT READY WITH CTRLD=1
	STX A,OUT1		;STORE WITH CTRLD=0 TO READ SWITCHES
	LDX A,INPORT		;READ SWITCHES
	LDY A,INPORT+2		;BOTH SETS
	STA A,OUT1		;STORE WITH CTRLD=1 TO FREE-UP COUNTERS
	STX INPUT		;SAVE INPUTS IN RAM
	STY INPUT+2
	LDA A,INPORT		;INSURANCE READ OF COUNTERS
	LDY A,INPORT+2
	STY NEWTB+2
	STA NEWTB
	TXA			;LSB'S OF "INPUT" HAVE TBALL
	STA TBDIR		;DIRECTION BITS
	INC INTCNT		;COUNT INTERRUPTS
	BIT VBLANK		;VERT. BLANKING?

;138 CYCLES (MIN) FROM FALL OF IRQ

	BVC 2$
	LDA INTCNT
	AND I,0FC		;PHASE LOCK FOR LED'S
	STA INTCNT
	DEC FIELD		;COUNT FIELDS

;+14 ON VBLANK

	BPL 10$
	LDA I,2			;3 FIELD'S PER FRAME
	STA FIELD		;(2,1,0)
	INC SYNC		;SYNC UP MAINLINE
	JSR MOTUP		;UPDATE MOTION OBJECT POSITIONS
10$:	LDA A,HVPOS+30.
	BEQ 11$
	LDA I,248.
	STA A,HVPOS+30.

;+13 MINIMUM

11$:	JSR DEBNCE		;KILL TIME WITH SWITCH DEBOUNCE
	LSR MOTDON		;WAS MOTUP DONE?
	BCS 2$			;YES, WE'RE PAST LINE 255
;IF MOTUP WAS NOT EXECUTED, WE ARE POSSIBLY ONLY 280 CYCLES INTO V-BLANKING
;(ABOUT 1/2 THROUGH LINE 245) IF WE WERE TO "STA A,INTACK" NOW, BEFORE
;LINE 256, WE WOULD BE INTERRUPTED AGAIN BY THE FALLING EDGE OF 32V @ LINE
;256.  WE NEED TO BURN 16*48-280 CYCLES (488) TO BE SAFE. SINCE A DEX, BNE
;LOOP BURNS 5 CYCLES PER ITERATION A COUNT OF 98 WILL SUFFICE.
;5*98+2 (LDX I,98..) = 492
	LDX I,107.
12$:	DEX
	BNE 12$
;WASTE TIME
2$:	STA A,INTACK		;ACKNOWLEDGE INTERRUPTS

	.SBTTL	MULTIPLEX LED CATHODES
MUXLED:	LDA INTCNT		;GET INTERUPT CTR
	AND I,3			;LSB'S GIVE QUARTER OF SCRN
	TAX			;PICK UP BIT TO LIGHT
	LDA ZX,LEDWD-1		;ANODE "A" NOT USED, SO RAM IS DON'T-CARE
	STA A,OUT3		;STORE OUT TO CATHODES

	TXA			;WAS THIS V-BLANK?
	BEQ SOUND		;YES, DEBOUNCE ALREADY DONE
	CMP I,2			;MID-FRAME INTERRUPT?
	BNE 25$			;NO, SKIP
	LDA A,HVPOS+30.		;DOWN MARKER VISIBLE?
	BEQ 25$			;INVISIBLE, LEAVE IT
	LDA I,16.
	STA A,HVPOS+30.		;SET ON BOTTOM OF SCREEN
25$:	JSR DEBNCE		;IF NOT ALREADY

	.SBTTL	HANDLE SOUNDS
SOUND:	LDA ATRACT
	BMI 10$
	LDA I,0
	STA BEEP
	STA WHISTL
10$:	LDA WHISTL	;WHISTLE
	BEQ 1$
	DEC WHISTL	;TIME IT
	LDA INTCNT	;WARBLE
1$:	LSR
	LSR
	AND I,1
	ORA BEEP		;STEADY TONE
	ORA I,4
12$:	LSR THUD	;HIT SOUND
	BCC 2$
15$:	ORA I,2
2$:	STA TOUT1
	LDA CROWD
	BIT ATRACT
	BPL 3$
	ORA I,20	;TURN SOUNDS ON
3$:	LDY $CCTIM	;COIN-COUNTER
	BPL 4$
	ORA I,10	;TURN IT ON
4$:	STA A,OUT2

	.SBTTL	HANDLE QUADRATURE TRACKBALL
TBALL:	LDX I,3			;FOR BOTH PLAYERS
10$:	LDA ZX,TBCTR-1		;GET TRACK-BALL COUNTER
	SEC
	SBC ZX,OTB-1		;GET CHANGE FROM OLD
	AND I,0F		;ISOLATE
	PHA
	LDA ZX,TBCTR-1
	ORA I,0F		;MAKE LSB'S DON'T-CARE
	SEC
	SBC ZX,OTB-1		;GET CHANGE FROM OLD
	LSR
	LSR
	LSR
	LSR			;SHIFT DOWN
	LDY ZX,NEWTB-1		;GET NEW VALUE
	STY ZX,OTB-1		;SAVE AS OLD FOR NEXT TIME
20$:	LSR TBDIR		;GET DIRECTION
	ORA I,0			;TEST MAG
	BEQ 30$			;KEEP ZERO ZERO
	BCC 30$			;BRANCH IF FORWARD
	EOR I,0F0		;ELSE FLIP "SIGN"
30$:	CLC
	ADC ZX,TBHD
	BVC 35$
	EOR I,80		;COMPLEMENT BAD SIGN
	ASL			;SAVE IT
	LDA I,7F		;SET MAX PLUS
	ADC I,0			;MAKE MINUS IF NEED BE
35$:	STA ZX,TBHD
	TXA			;WHAT DID WE JUST DO
	LSR			;GET EVEN/ODD INTO CARRY
	DEX			;BUMP TO NEXT
	BCC 40$			;IF JUST DID EVEN, CHECK DONE
	PLA			;ELSE GET H-VALUE
	BCS 20$			;DO BOTTOM-LOOP (ALWAYS)
	
40$:	BPL 10$			;DO OTHER PLAYER

	JSR MOOLAH		;COIN ROUTINE

	PLA
	TAY
	PLA
	TAX
	PLA
M40:	RTI		;RTI=40 HEX, USED TO TEST TEST SW.

	.SBTTL	DE-BOUNCE SWITCHES
;NOTE-SWITCHES ARE LOW-TRUE (107 CYCLES, INCL JSR)
DEBNCE:	LDX I,2
1$:	LDY ZX,INPUT		;READ SWITCHES
	LDA ZX,DBSW		;SAVE OLD SWITCHES
	STY ZX,DBSW		;REPLACE WITH NEW
	TAY			;COPY OLD
	AND ZX,DBSW		;MAKE ONES WHERE BOTH OFF
	ORA ZX,SWSTAT
	STA ZX,SWSTAT		;TURN OFF IN STATUS
	TYA			;GET BACK OLD
	ORA ZX,DBSW		;MAKE ZEROES WHERE BOTH ON
	AND ZX,SWSTAT		;TURN ON IN STATUS
	STA ZX,SWSTAT		;SAVE NEW STATUS
	DEX
	DEX
	BPL 1$
	RTS


	.SBTTL	MOVE MOTION OBJECT PARAMS
;-13.-18 SCAN LINES
MOTUP:	LDA SLOCK
	BNE 4$
	INC MOTDON
	LDX I,30.		;OBJ. 0-15, 2 BYTES @
1$:	LDA AX,HPOSL
	SEC
	SBC SFDL
	AND I,0E0		;SAVE TOP 3 BITS
	STA IJ			;SAVE IN INTERRUPT'S BUCKET
	LDA AX,HPOSH
	SBC SFDH		;FINISH D.P. SUBTRACT
	BCC 2$			;BRANCH IF OBJECT OFF TO LEFT
	CMP I,31.
	BCS 2$			;BRANCH IF OBJECT OFF TO RIGHT
	LSR			;MAKE GAP FOR CARRY
	ORA IJ			;"OR" LOW BITS INTO HIGH BITS
;ACC IS NOW D2,D1,D0,0,D7,D6,D5,D4  CARRY CONTAINS D3

	ROL			;D1,D0,0,D7,D6,D5,D4,D3  D2
	ROL			;D0,0,D7,D6,D5,D4,D3,D2  D1
	ROL			;0,D7,D6,D5,D4,D3,D2,D1  D0
	ROL			;GOT IT RIGHT, AND CARRY CLEAR
	STA AX,HHPOS		;OUT TO HARDWARE
	LDA AX,VPOS		;THIS ONE'S PRE-ADJUSTED
	BCC 3$			;ALWAYS***
2$:	LDA I,0
3$:	STA AX,HVPOS		;CORRECT OR BLANKED, OUT TO HDW.
	DEX
	DEX
	BPL 1$			;WHILE OBJ # >= 0
	LDA SFDL
	AND I,0E0		;SAVE TOP 3 OF BOTTOM 8
	STA IJ
	LDA SFDH
	AND I,1F
	LSR
	ORA IJ
	ROL
	ROL
	ROL
	ROL			;REPEAT STUNT ABOVE
	STA A,SFHPOS		;STORE TO SCROLLFIELD DISPLACEMENT
	LDA INTCNT
	AND I,30		;4 HZ, 75% ON
	BNE 4$
	LDX CTLPTR		;POINTS TO LEFT JOYSTICK MAN
	BMI 35$			;NO SUCH FELLA
	STA AX,HVPOS		;ELSE BLINK MAN
35$:	LDX CTLPTR+2		;RIGHT JOYSTICK MAN
	BMI 4$
	STA AX,HVPOS
4$:	RTS

	.SBTTL POWER-ON-RESET
RESET:	LDX I,0FF
	TXS			;SET UP STACK
;NOW FALL THROUGH TO CLEAR RAM, FOR BOTH GAME AND TEST
	.SBTTL SELF-TEST
STEST:	CLD
	LDX I,0
	TXA
1$:	STA ZX,0
	STA AX,ALPHL
	STA AX,ALPHR
	STA AX,SCRFLD
	DEX
	BNE 1$
	STA A,OUT1		;HIT KICKER, ENABLE SWITCH READ
	BIT A,INPORT+2		;CHECK TEST SW.
	BVC TREPT		;BRANCH IF ON
	JMP START		;ELSE GO TO GAME MODE

	.SBTTL	ZERO-PAGE TEST
TREPT:	LDX I,11		;BEGINNING PATTERN
	TXS			;S HOLDS PATTERN
	TXA
	STA Z,0			;TEST CELL START @ 0
	LDY I,0
2$:	LDX I,1			;ONE LESS COUNT BEFORE IT WRAPS
3$:	INY			;SCAN FORWARD
	LDA AY,0		;ZERO?
	BNE 5$			;NO, ERROR
	INX			;HOW FAR HAVE WE SCANNED
	BNE 3$			;KEEP MOVING
	TSX
	TXA			;ACC <- PATTERN
	STA A,WTCHDG
	INY			;POINT TO TEST CELL
	CMP AY,0		;DOES IT HAVE PATTERN
	BNE 5$			;IF NOT, IS ERROR
	LDX I,0			;ELSE CLEAR CELL
	STX ZY,0
	INY			;POINT TO NEXT TEST CELL
	BNE 4$			;IF PASS NOT COMPLETE
	ASL			;ELSE SHIFT PATTERN
	LDX I,19.		;FOR MSG. IF DONE
	BCS 6$			;BRANCH IF DONE
4$:	TAX			;PATTERN -> ACC
	TXS			;    "   -> STORAGE
	STX ZY,0		;    "   -> NEW TEST CELL
	BNE 2$			;***ALWAYS, REPEAT SCAN

5$:	LDX I,16.
6$:	LDY I,16.
	.SBTTL	REPORT MEMORY STATUS
MEMREP:	LDA AX,ERMSG
	STA AY,ALPHL+28
	AND I,3F		;CLEAR REFLECT BITS
	BEQ 1$
	CLC
	ADC I,58
1$:	STA AY,SCRFLD+4		;GET A LITTLE AWAY FROM THE EDGE
	DEX
	DEY
	BMI PATSCN
	CPY I,9
	BNE MEMREP

	.SBTTL	ROM TEST
ROMTST:	LDY I,0			;PROG STARTS ON EVEN PG.
	STY ADL			;LOW ADDRESS PTR
	TYA			;CLRA
	PHA			;CLR (SP)-
	LDA I,PROG&0FF00/100	;HIGH BYTE OF PROG ADDR
	STA ADH			;HIGH ADDRESS PTR
	LDX I,23.		;24 PAGES OF ROM
	TXA			;SEED FOR L.R.C.
	LSR			;GET SOMETHING IN EACH NYBBLE(34,38,3C)
10$:	LDY I,0
	STX A,WTCHDG		;MUZZLE DOG
1$:	EOR NY,ADL		;LONGITUDINAL PARITY
	INY
	BNE 1$			;LOOP FOR 1 PAGE
	TAY			;SAVE LRC
	TXA
	AND I,7			;3 LSB=PAGE IN ROM
	CMP I,1			;CLEAR CARRY IF END OF ROM
	TYA			;PUT LRC BACK
	BCS 3$			;SKIP IF IN ROM
	BEQ 2$			;SKIP IF OK
	PHA			;ELSE SNAP FOR ANALYZER
2$:	TXA			;RE-SEED FOR NEW ROM
3$:	INC ADH			;BUMP PTR
	DEX			;COUNT PAGES
	BPL 10$
	LDX I,9			;DEFAULT TO "ROM OK"
	PLA			;ANY PUSHES?
	BEQ 4$			;NO, OK
	LDX I,6			;ELSE POINT TO "BAD ROM"
4$:	LDY I,6			;6 CHAR MSG
	BNE MEMREP		;(ALWAYS)
;53 BYTES DOWN THE TUBES!!!
	.SBTTL	PATTERN SCREEN
PATSCN:	LDX I,0
1$:	TXA
	STA AX,ALPHR
	STA AX,ALPHL+40
	STA AX,SCRFLD+100
	STA AX,SCRFLD+200
	STA AX,SCRFLD+300
	INX
	BNE 1$
	STX A,SFHPOS
	LDX I,30.
	LDA I,15
2$:	STA AX,HPICT
	EOR I,1
	DEX
	DEX
	BPL 2$

	.SBTTL	SWITCH TEST
SWTEST:	LDA I,4			;KEEP KICKER HIGH TO ENABLE CROWD
	STA A,OUT1		;SET CTRLD=0 TO READ SW.
	LDX I,0			;CLR X
	LDA A,INPORT		;GET FIRST SW. PORT
	STA TBDIR		;SAVE TRACK-BALL DIR.
	STA INPUT		;SAVE INPUTS
	ORA I,4F		;SWITCHES IN TOP,MAKE LSB & VBLANK DON'T CARES
1$:	BMI 2$
	INX			;COUNT 0'S
2$:	ASL			;SHIFT TO NEXT SW
	BNE 1$			;IF THERE IS ONE
	LDA A,INPORT+2		;OTHER SWITCHES
	STA INPUT+2
	BIT A,M40		;TEST SW?
	BEQ 25$			;STILL ON, CONTINUE
	JMP RESET		;ELSE RESET TO GAME
25$:	ORA I,0F		;REPEAT ABOVE
3$:	BMI 4$
	INX
4$:	ASL
	BNE 3$
;AT THIS POINT, X CONTAINS THE # OF SWITCHES CLOSED
	TXA			;SAVE X
	CLC			;FLAG "NO CHANGE"
5$:	DEX
	BMI 6$			;X OUT, HOW'S Y DOING
	DEY			;ELSE MATCH DEX WITH DEY
	BPL 5$			;EQUAL SO FAR, LOOP
	BMI 7$			;ELSE Y WAS LESS, BEEP

6$:	DEY
	BMI 8$			;X=Y, NO SOUND
7$:	SEC			;COME HERE TO BEEP
8$:	TAY			;SAVE SWITCHES FOR NEXT
	LDA I,12		;CTRLD, KICKER (SHIFTED RIGHT)
	ROL			;LINE IT UP AND PUT IN WHISTLE
	STA A,OUT1		;SET CTRLD=1, AND WHISTLE
	LDX A,INPORT
	STX OTB
	LDX A,INPORT+2
	STX OTB+2
	LDX I,0			;MAKE X=0 (OR AT MOST 5)
9$:	CMP NX,0		;WASTE 6 CYCLES
	INX			;+2 MORE
	BNE 9$			;+ AT LEAST 3 (*256=3.7 MS.)
	LSR			;SET C IF ANY SWITCHES CHANGED
	LDA CROWD
	ORA I,20		;SET ATRACT BAR
	STA A,OUT2		;MAKE SURE SOUNDS ON
	STA A,WTCHDG		;KEEP DOG QUIET
;IF A SWITCH CHANGED, BUMP THE MOTION OBJECT PTR FOR BELOW TEST
	LDA J
	BCC 10$			;SKIP IF NO CHANGE
	ADC I,3			;ADDS 4, CUZ CARRY IS SET
10$:	AND I,1C		;KEEP IT A VALID OBJECT PTR
	STA J

	.SBTTL	TRACK-BALL TEST
TBTEST:	LDX I,2
1$:	LDA AX,INPORT		;SAMPLE COUNTER VALUE
	SEC
	ORA I,0F		;MAKE LSB'S DON'T CARE
	SBC ZX,OTB		;TAKE OUT COUNT OF 4 MS AGO
	LSR
	LSR
	LSR
	LSR			;DOWN TO BOTTOM
	LSR TBDIR		;CHECK DIRECTION
	ORA I,0			;TSTA
	BEQ 2$			;0 STAYS 0
	BCC 2$			;+ STAYS +
	ORA I,0F0		;ELSE PUT IN SIGN
2$:	CLC
	ADC ZX,TBVD
	STA ZX,TBVD
	LDA AX,INPORT
	SEC
	SBC ZX,OTB
	LSR TBDIR
	AND I,0F
	BEQ 3$
	BCC 3$
	ORA I,0F0
3$:	CLC
	ADC ZX,TBHD
	STA ZX,TBHD
	DEX
	DEX
	BPL 1$			;LOOP FOR BALL 0
;NOW USE TBVD,TBHD TO MOVE OBJ(J),OBJ(J+2)
	LDX J
	LDA TBHD
	STA AX,HHPOS
	LDA TBVD
	STA AX,HVPOS
	LDA TBHD+2
	STA AX,HHPOS+2
	LDA TBVD+2
	STA AX,HVPOS+2
	.SBTTL	SCROLL-FIELD TEST
SCFTST:	LDA INPUT
	AND I,10		;SELECT SW 0
	BNE 1$			;SKIP IF OFF
	INC SFDL		;ELSE MOVE TOWARD #0 (LEFT)
1$:	LDA INPUT+2
	AND I,10
	BNE 2$
	DEC SFDL
2$:	LDA SFDL
	STA A,SFHPOS		;OUT TO HARINARE
;SET CROWD VOLUME PROPORTIONAL TO # OF SWITCHES CLOSED
	TYA			;GET #OF CLOSED SWITCHES(1-6)
	STA K
	ASL
	ADC K			;*3=3,6,9,12,15,18
	ADC I,-3		;0-15 (0,3,6,9,12,15)
	STA CROWD		;USE TO TEST CROWD SOUND
;NOW DISPLAY CODE IN OPTION SWITCHES
	LDA INPUT+2		;GET OPTION SW WD
	AND I,3			;ISOLATE COIN MODE
	CLC
	ADC I,59		;MAKE A CODE FROM A-D
	STA A,SCRFLD+28		;DISPLAY ON SCROLLFIELD
	JMP SWTEST		;LOOP WHILE TEST SW IS ON
ERMSG:	.ASCII /BAD@ROM@OK/
	.ASCII /BAD@RAM@OK/
EOPROG:	.BYTE 0,0,0,0,0,0
	.VCTRS 7FFA,RESET,RESET,IRQ
	.END
                                                                                                                                                                                                                                                                                                                                              