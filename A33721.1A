	.TITLE FUTBAL
	.RADIX 16
	.IIF NDF,NTB,NTB=1
	.ASECT
	.SBTTL ******************************
	.SBTTL * PROGRAMER: MIKE ALBAUGH    *
	.SBTTL *                            *
	.SBTTL * CHECKER:                   *
	.SBTTL *                            *
	.SBTTL ******************************
	.REPT 0

DATE INITIATED: 22-MAR-78
PROJECT CHARGE #: 5P221
DISK #:	73
HARDWARE REQUIREMENTS:	MONSTER-MAN PCB, CONSISTING OF BASIC MOC16
			WITH ADDITIONS	1) HORIZONTAL SCROLLING FOR PLAYFIELD
					2) 4 ANODE MULTIPLEXED LED DISPLAYS
					3) ALPHANUMERICS ON EDGES OF PLAYFIELD,
					   3 USABLE ROWS PER EDGE.

MEMORY REQUIREMENTS:	768 BYTES WORKING RAM
			256 BYTES ALPHANUMERICS RAM
			960 BYTES SCROLL-FIELD RAM
			 64 BYTES MOTION-OBJECT PARAMETERS

			 8K BYTES PROGRAM ROM

INTERRUPT REQUIREMENTS:	FOUR IRQ'S PER FRAME. THESE ARE IN GENERAL ON THE
			FALLING EDGE OF 32V, WITH THE EXCEPTION OF THE LAST,
			WHICH OCCURS AT LINE 240, RATHER THAN LINE 256, TO ALLOW
			MAXIMUM USE OF VERTICAL RETRACE TIME.TIMING OF THESE
			IRQ'S IS IMPORTANT, BECAUSE THE ANODE DRIVERS OF THE
			MULTIPLEXED LED DISPLAY ARE DRIVEN DIRECTLY BY
			V-FUNCTIONS, AND THE CATHODES ARE HELD OFF BY THE IRQ
			SIGNAL. IN PARTICULAR: A) THE IRQ MUST BE ACKNOWLEDGED
			(BY A STORE TO INTACK, LOCATION 3000 HEX) BEFORE NEW
			INFORMATION FOR THE CATHODES IS WRITTEN. B) THE IRQ MUST
			NOT (!) BE ACKNOWLEDGED BETWEEN LINES 240 AND 256, AS IT
			WILL BE RE-ASSERTED AT LINE 256 IN THAT CASE. FOR THIS
			REASON THE INPUT "VBLANK" (D7, LOCATION 4001) IS REALLY
			THE SIGNAL "ENDSCREEN" WHICH IS ASSERTED ONLY IN LINES
			240 THRU 256.

ASSEMBLY COMMAND STRING:*FUTBAL,FUTBAL=FUTBAL/C

LINK COMMAND STRING:*PP:/L,RK1:FBMAP.LST=FUTBAL,FBCHOR,FBCOIN,FBINT

PROGRAM DESCRIPTION: MAIN PROGRAM FOR "MONSTER-MAN FOOTBALL". USES TABLES
			IN FBCHOR TO DIRECT PLAYS. USES STANDARD COIN ROUTINE,
			(CUSTOMIZED BY FBCONF) ON FILE FBCOIN.OBJ FOR HANDLING
			COINS.  FBINT IS INTERRUPT, TEST, AND VECTORS.  FBCOMN (INCLUDED)
			DEFINES STORAGE. GAME IS ON "EACH COIN ADDS TIME" BASIS
	.ENDR
NPLAYS=4
	.GLOBL $CNCT
	.INCLUDE FBCOMN

	.IIF NDF,AIM,AIM=1	;DEFAULT TO AIM
	.IF NE,AIM
	.SBTTL AIM,DEBUG STUFF
	.=PROG-200		;HANG THIS UNDERNEATH
AIMENT:	SEI
	LDA I,0
	.=.-1
	.WORD IRQ		;FORM "LDA I,IRQ&0FF"
	.=.-1			;BACKSPACE OVER HIGH BYTE
	STA A,0F7C8		;STORE IN AIM'S "VECTOR"
	LDA I,0
	.=.-1
	.ENABL M68		;SWAB FOLLOWING WORD
	.WORD IRQ		;FORM "LDA I,IRQ/100"
	.DSABL M68		;BACK TO L,H
	.=.-1			;BACKSPACE OVER LOW BYTE
	STA A,0F7C9
	LDA I,0
	STA A,100
	STA A,101		;CORK TRACE LIST
	STA A,APAT1		;BREAK @ APAT1
	LDA I,TRACE&0FF		;PATCH "JSR FANS"
	STA A,APAT0+1		;TO BE "JSR TRACE"
	LDA I,TRACE/100
	STA A,APAT0+2
	JMP RESET
	.SBTTL TRACE UTILITY
;BEGIN INTEGER J, WORD ARRAY TSRC, BYTE ARRAY TDST
;J:=0
;WHILE (TSRC(J).NE.0) DO
;SCREEN (TDST(J))=MEMORY (TSRC(J))
;J:=J+1
;END
TRACE:	LDY I,0
	STY J
1$:	LDY J
	LDA AY,TSRC
	STA ADL
	LDA AY,TSRC+1
	STA ADH			;BUILD PTR TO BYTE
	ORA ADL
	BEQ 2$			;TRCING 0000=END
	LDX I,0
	LDA NX,ADL		;GET BYTE
	JSR ASCAX		;CONVERT TO ASCII IN A,X
	PHA
	LDA AY,TDST
	INY
	INY
	INY
	STY J			;SAVE LIST PTR
	TAY			;POINT TO SCREEN
	PLA			;GET HIGH NYBBLE
	JSR WRTAN		;WRITE ALPHANUMERICS
	TXA			;LOW NYBBLE
	JSR WRTAN
	JMP 1$
2$:	JMP FANS		;DO WHAT HE WANTED
	.ENDC
	.PAGE
	.SBTTL INITIALIZE
	.=PROG
START:	CLI
	LDA INTCNT		;"RANDOM " #
	AND I,2
	STA OFFENS
	JSR STRTGM		;"START GAME"
	.SBTTL "MAIN-LOOP"
WAIT:
	
1$:	LSR SYNC
	BCC 1$		;WAIT FOR V-BLANK
	STA A,WTCHDG
	JSR GAME
APAT0:	JSR FANS		;AIM PATCHES HERE
	BIT A,TEST
	BVS WAIT		;BRANCH IF TEST OFF
APAT1:	JMP RESET		;FAKE RESET
CKS0:	.BYTE 0B9

	.SBTTL GAME MASTER CONTROL

GAME:	JSR TRACK
	LDA $CNCT		;ANY MONEY?
	BEQ DSPTCH		;NO, JUST DO WHATEVER
	DEC $CNCT		;ELSE TAKE THEIR MONEY
	JSR UPTIME		;AND GIVE THEM SOME (MORE) TIME
	JSR DTIME		;SHOW IT
	LDA I,0
	STA W30TIM		;ENABLE 30 SEC. WARNING TIMER
	LDA ATRACT		;ARE WE IN ATTRACT?
	BMI DSPTCH		;NO, PROCEED
	LDA I,-1		;PUT IN GAME
	STA ATRACT
STRTGM:	LDA I,EC.SG		;END PLAY, START GAME
	STA WHYEND
	LDA I,30.
	STA STPCLK		;KEEP CLOCK OFF FOR 30 SECONDS
	JSR WECASE
	LDA I,0
	STA WHISTL		;KILL LEFT-OVER SOUNDS
	STA THUD
	LDX I,3
21$:	STA ZX,SCORE		;CLEAR SCORES
	DEX
	BPL 21$
	JSR CAN
	JSR RSF
	LDA I,M.BAN1
	JSR WRITEB
	LDA I,M.BAN2
	JSR WRITEB
	JSR DTIME
	JSR DSTAT

DSPTCH:	BIT STATE		;WHAT STATE ARE WE IN
	BMI PAUSE		;S.PAUS=80
	BVC SELECT		;S.SEL=0
	JMP PLAY		;MUST BE PLAY (S.PLAY=40)

PAUSE:	LDY PAUST		;CHECK PAUSE TIMER
	BEQ 20$			;TIMED OUT
	DEC PAUST		;RUN IT
	BNE 45$			;STILL RUNNING, RETURN

;WE ONLY COME HERE ON A 1->0 TRANSITION OF PAUST

	LDA MINUTE
	BNE 15$			;PLENTY OF TIME
	LDA SECOND
	BEQ 5$			;NONE AT ALL, GO TO ATTRACT
	CMP I,31		;CHECK FOR 30 SEC MARK
	BCS 15$			;NOT YET
	LDA W30TIM		;CHECK WARNING TIMER
	BNE 15$			;NOT TO BOTHER
	LDA I,60.		;ELSE START IT
	STA W30TIM
	LDA I,M.GAO		;"GAME ALMOST OVER"
	BNE 10$			;ALWAYS

5$:	STA ATRACT		;TIME'S UP, INTO ATTRACT
	LDA I,M.GO		;"GAME OVER"
10$:	JSR WRITEB		;TELL BOTH PLAYERS
15$:	JSR HUDDLE		;IN ANY CASE, PUT PLAYERS IN HUDDLE

;BELOW IS DONE WHENEVER PAUST = 0

20$:	LDA OLDOFF		;SEE IF OFFENSE HAS CHANGED
	CMP OFFENS
	BEQ 30$			;THEY'RE OK, SKIP IT
	JSR CHANGE		;ELSE CHANGE TEAMS
	LDA I,30.
	STA STPCLK		;STOP CLOCK WHILE THEY GET IN PLACE
	RTS

;BELOW IS DONE WHEN PAUST = 0 AND TEAMS ARE OK

30$:	LDA W30TIM		;CHECK 30 SEC WARNING TIMER
	LSR			;0 OR 1?
	BNE 32$			;NO, RUN IT
	STA BEEP		;ELSE KEEP IRRITATING SOUND OFF
	BEQ 40$			;GO TO SELECT STATE
32$:	DEC W30TIM		;ELSE RUN TIMER
	AND I,2			;USE MIDDLE BIT
	BEQ 35$			;TO TURN OFF
	LDA I,1			;AND ON
35$:	STA BEEP		;BEEPER
	LDA W30TIM		;GET TIMER AGAIN
	CMP I,30.		;1/2 WAY?
	BNE 45$			;NO, RETURN
	LDA I,M.ICTP		;"INSERT COINS TO KEEP PLAYING"
	JMP WRITEB		;WRITE AND RTS

;IF ALL THIS STUFF HAS BEEN TAKEN CARE OF, ENTER SELECT STATE

40$:	LDA I,S.SEL
	STA STATE		;STATE=SELECT
45$:	RTS

SELECT:	JSR PSEL		;CHECK BUTTONS
	LDA I,0
10$:	STA INPLCE		;CLR INPLCE
	LDX I,28.
11$:	JSR EXEC
	LDA AX,FLAGS		;HAS BEEN(!) IN PLACE!
	BPL 12$			;NO, SKIP
	AND I,7F		;CLEAR FOR NEXT TIME
	STA AX,FLAGS
	INC INPLCE		;ELSE COUNT
12$:	DEX
	DEX
	BPL 11$
	LDA PSTIM
	ORA PSTIM+2		;"OR" OF INDIV TIMERS
	BNE 20$			;BRANCH IF STILL WAITING
	JSR SETPOS
	LDA A,HVPOS+28.		;IS BALL BLANKED?
	BNE 14$			;NO SKIP
	JSR TRACK		;ELSE DOUBLE TRACKING
	DEC INPLCE
14$:	LDA INPLCE
	CMP I,15.		;ALL IN PLACE?
	BEQ 15$
	JMP 30$			;NO, SKIP

15$:	LDA I,S.PLAY		;ELSE ENTER PLAY
	STA STATE
	LDX OFFENS		;POINT TO OFFENSE
	LDA ZX,PLAYNO		;GET PLAY #
	CMP I,2			;RUNNING?
	LDA I,6
	BCS 17$			;NO
	LDA I,15.		;3/4 SECOND
17$:	STA OFSPDT		;OF FAST OFFENSE
	LDA I,1			;SET GLOBAL FLAGS
	STA WFLAG		;TO "ONE" TO SNAP
	LSR			;MAKE A ZERO
	STA MPSTIM		;RESET MPSTIM
	STA STPCLK		;AND CLOCK-STOPPER
	LDA I,0CC		;SOMEWHAT OF A THUMP
	STA THUD		;FOR "HIKE" SOUND
	RTS
20$:				;IF PSTIM IS NON-ZERO THEN EITHER WE ARE WAITING
				;FOR A PLAYER TO MAKE AN INITIAL SELECTION, OR
				;TO CHANGE SELECTION.
				;
	LDY MPSTIM		;MASTER-PLAY-SELECT: COUNTS DOWN FROM 11.5 SECS.
				;AFTER ONE PLAYER MAKES A SELECTION.
	BEQ 22$			;0 MEANS NEITHER PLAYER HAS SELECTED YET.
	DEY			;DECREMENT IT
	BEQ 21$			;BUT NOT PAST ONE
	STY MPSTIM
	BNE 22$			;GO DO MESSAGES
21$:	LDX I,2			;11.5 SEC. TIMER IS ZERO: SEE IF ANYONE
	LDY PSTIM+2		;GETS A PENALTY
	BMI 27$			;GO HANDLE PENALTY
	LDX I,0
	LDY PSTIM
	BMI 27$			;GO HANDLE PENALTY
22$:	LDA I,M.IC		;OUTPUT VARIOUS MESSAGES IN ATTRACT: "INSERT COINS"
	LDY ATRACT
	BPL 26$			;BRANCH IF ATTRACT
24$:
				;NOW OUTPUT "SELECT PLAY" OR "READY" MOST OF
				;THE TIME SAY "SELECT PLAY", BUT IF BOTH PLAYERS
				;HAVE SELECTED AND LOCKED IN (PSTIM=0), OR IF
				;MPSTIM IS LESS THAN 30, I.E. LESS THAN 1.5
				;SECONDS, THEN OUTPUT "READY".
	LDY MPSTIM
	BEQ 29$
	CPY I,30.
	BCC 25$
	LDA PSTIM
	ORA PSTIM+2
	BNE 29$			;GO OUTPUT "SELECT PLAY"
25$:	LDA I,M.RDY
26$:	JSR WRITEB
	JMP 30$
27$:				;PENALTY!!
28$:	STX TARDY
	LDA I,EC.DOG
	STA WHYEND
	LDA I,30.
	STA STPCLK		;HOLD CLOCK FOR 30 SECONDS
	JMP WECASE		;LEAVE AND NEVER RETURN (ON THIS PASS)
29$:
	JSR TELLEM		;FLASH "SELECT PLAY" AND "YOU ARE DEF./OFF."

30$:	JSR TIMER		;RUN GAME TIMER IF RUNTIM=1
	BCC 40$			;NO CHANGE
	JSR DTIME		;DISPLAY IT
	LDA MINUTE
	ORA SECOND
	BNE 40$
	LDA ATRACT		;IN ATTRACT?
	BPL 40$			;YES, SKIP FLOGGING OF DEAD HORSE
35$:	JMP EP.ABT		;SET ATTRACT
40$:	RTS

PLAY:	LDA ATRACT		;ATTRACT?
	BMI 2$			;NO, GAME
	LDA I,M.ECAT		;EACH COIN ADDS TIME
	JSR WRITEB		;ALTERNATE MESSAGES
2$:	LDX I,28.
3$:	JSR EXEC		;EXECUTE "PROGRAM" FOR THIS OBJECT
	LDA AX,FLAGS		;RESET COLLISION FLAGS
	AND I,0FA		;TO PREPARE FOR COLCHK
	STA AX,FLAGS
	DEX
	DEX			;DOWN TO NEXT OBJECT
	BPL 3$
	LDX I,28.
37$:	JSR COLCHK		;COLLISION CHECK
	LDA WHYEND		;ABORT?
	BNE 38$			;YES
	DEX
	DEX
	BNE 37$
38$:	LDA OFSPDT
	BEQ 35$
	DEC OFSPDT
35$:	LDA OFFENS
	EOR I,2
	TAX
	LDY ZX,CTLPTR		;POINT TO MONSTER-MAN
	BMI 39$
	JSR PSCRIM		;PAST SCRIMMAGE?
	BNE 39$			;NO,SKIP
	LDA WFLAG
	AND I,2
	BNE 39$
	LDA I,EC.OS		;OFF SIDES
	STA WHYEND
	BNE WECASE		;ALWAYS

39$:	JSR PASSQ		;CHECK FOR PASS SWITCH
	LDY HASBAL		;WHO HAS THE BALL?
	BMI WECASE		;NOBODY, BRANCH TO CASE STMT.
	SEI
	LDA AY,HPOSL
	STA A,HPOSL+28.		;BALL IS OBJECT 14. (PLAYERS ARE 0-13)
	LDA AY,HPOSH
	STA A,HPOSH+28.
	LDA AY,VPOS
	STA A,VPOS+28.		;SET BALL POSN FOR BEING "CARRIED"
	CLI
	JSR CKGOAL		;CHECK BALL CARRIER AGAINST GOAL'S
;IMPLEMENT CASE (WHYEND) OF WETAB
WECASE:	LDA WHYEND
	CMP I,NCASES
	BCC 1$
	BRK
1$:	ASL
	TAX
	LDA AX,WETAB+1
	PHA
	LDA AX,WETAB
	PHA
CASRET:	RTS
WETAB:	.WORD EP.NUL-1,EP.SG-1,EP.TKL-1,EP.INC-1,EP.INT-1,EP.OOB-1
	.WORD EP.TDD-1,EP.TDO-1,EP.SAF-1,EP.TB-1,EP.OS-1,EP.DOG-1
NCASES  =.-WETAB/2
EP.NUL:	JSR TIMER		;PLAY NOT OVER, JUST DO TIMER
	BCC CASRET		;SKIP IF NO CHANGE
	JMP DTIME		;ELSE DISPLAY IT AND RETURN

	.SBTTL END OF PLAY
EP.DOG:	LDX TARDY
	BPL EP.PEN		;ALWAYS
EP.OS:	LDA OFFENS
	EOR I,2
	TAX			;PT TO DEFENSE
EP.PEN:	DEC DOWN		;COMPENSATE FOR AUTO-INC
	JSR PENAL5		;5 YD PENALTY
EP.INC:	LDA I,30.
	STA STPCLK		;STOP CLOCK
	BNE EP.C1

EP.SG:	LDA FRAME		;"RANDOM" #
	AND I,2			;PICK A PLAYER
	STA OFFENS		;MAKE HIM OFFENSE
	LDA I,-1		;CAN'T MATCH
	STA OLDOFF		;SO FORCES RE-WRITE
				;GAME START IS PHONY TO
EP.TDD:	JSR FLIP		;TD BY DEFENSE, FLIP SIDES, THEN DO TD STUFF
EP.TB:				;AS IS TOUCHBACK
EP.SAF:				;SAFETY TREATED LIKE TD
EP.TDO:	JSR KIKOFF		;RESET ON 20
	JMP EP.COM		;RE-ENTER COMMON CODE
EP.INT:	JSR SETBAL		;INTERCEPTION, SET SCRIMMAGE LINE
	JSR FLIP		;FLIP OFFENSE/DEFENSE
	JMP EP.COM		;ENTER COMMON CODE
EP.OOB: LDA I,30.		;OUT-OF-BOUNDS, STOP CLOCK
	STA STPCLK
EP.TKL:	JSR SETBAL		;SET LINE OF SCRIMMAGE
EP.C1: LDA SCRIMH
	CMP A,FDHPOS		;FIRST DOWN LINE
	LDA SCRIMH+1		;GET WHOLE YDS OF SCRIMMAGE LINE
	SBC A,FDHPOS+1		;"COMPARE" DISTANCE FROM SCRIM. TO FIRST DOWN
	LDX OFFENS		;CHECK PLAYER #
	LDA AX,FDDIR
	ADC I,0			;BC(C/S)
	BNE 6$			;DIDN'T MAKE IT
3$:	JSR CFD			;COMPUTE FIRST DOWN
	JMP EP.COM		;& RE-ENTER COMMON CODE
6$:	INC DOWN		;BUMP DOWN.
	LDA DOWN		;AND CHECK IT
	CMP I,5
	BCC EP.COM		;BRANCH IF DOWN<5
	JSR FLIP		;ELSE FLIP SIDES
EP.COM: LDX WHYEND		;FIND OUT WHY PLAY ENDED
	LDA AX,CHTAB-1
	CMP CHEER
	BCC 10$
	STA CHEER
10$:	LDA AX,ENDMES-1		;PICK AN APROPRIATE MESSAGE
	JSR WRITEB		;TELL THE PLAYERS
	JSR STATS		;UPDATE STATS
EP.ABT:	LDA I,-1		;ABORT ENTRY POINT, FOR TIME-OUT IN SELECT
	STA PSTIM		;RESET PLAY-SELECT TIMERS
	STA PSTIM+2
	STA HASBAL		;RESET BALL POSSESSION
	STA REC1		;RESET
	STA CTLPTR		;RESET CONTROLLED MEN
	STA CTLPTR+2
	STA PSFLAG
	LDA I,0
	STA WFLAG		;RESET GLOBAL FLAGS
	STA WHYEND
	STA MPSTIM		;RESET MASTER P.S. TIMER
	STA LEDWD		;DOUSE LEDS
	STA LEDWD+2
	LDX I,28.
1$:	STA ZX,OP
	DEX
	DEX
	BPL 1$
	LDX I,2
2$:	TXA
	EOR FRAME
	ADC ZX,PLAYNO
	AND I,3
	STA ZX,PLAYNO
	DEX
	DEX
	BPL 2$
	LDA I,60
	STA WHISTL		;BLOW REF'S WHISTLE
	LDY I,20.		;1 SEC. PAUSE
8$:	STY PAUST		;SET PAUSE TIMER
	LDA I,S.PAUS
	STA STATE		;STATE= PAUSE
	RTS

ENDMES: .BYTE M.BAN1,M.TKL,M.INC,M.INT,M.OOB,M.TD,M.TD,M.SAF,M.TB,M.OS,M.DOG
CHTAB:	.BYTE 0,20,20,40,10,240.,240.,120.,40,0,0
FDDIR:	.BYTE -1		;-1+ CARRY= 0 (BCS FOR #0)
FDINC:	.BYTE 10.,0,-10.	;MOVE 0 RIGHT; BCC FOR #2; MOVE 2 LEFT

KIKOFF:	LDA I,30.		;20 YD LINE IS 30 FROM END
	LDY I,20
	LDX OFFENS		;CHECK WHO WILL BE DEFENSE
	BNE 1$			;#2 WILL BE, LEAVE ON HIS 80
	LDY I,0E0
	LDA I,FL-30.		;ELSE MOVE TO END OF FIELD
1$:	STA SCRIMH+1
	STY SCRIMH		;LOW BYTE
	LDA I,132.		;CENTER OF FIELD, VERTICALLY
	STA SCRIMV

;NOW FALL THROUGH TO FLIP OFFENSE/DEFENSE


FLIP:	LDA OFFENS		;GET POINTER TO OFFENSE
	EOR I,2			;FLIP IT
	STA OFFENS

;FALL THROUGH TO COMPUTE FIRST DOWN & RTS

CFD:	LDA I,1
	STA DOWN		;RESET DOWN
	LDX OFFENS		;POINT TO OFFENSE
	LDA SCRIMH
	STA A,FDHPOS
	LDA SCRIMH+1
	CLC
	ADC AX,FDINC		;OFFSET TOWARDS CORRECT GOAL
	STA A,FDHPOS+1
	LDA A,FDHPOS		;CHECK FOR
	CMP AX,GOALIN		;PAST GOAL
	LDA A,FDHPOS+1
	SBC AX,GOALIN+1
	LDA AX,FDDIR
	ADC I,0
	BNE 1$			;NOT, PAST, OK
	LDA AX,GOALIN		;ELSE SET
	STA A,FDHPOS
	LDA AX,GOALIN+1
	STA A,FDHPOS+1
1$:	LDA AX,FDINC
	AND I,40
	EOR I,11		;MAKE 11 FOR #0,51 (FLIPPED) FOR PLAYER #2
	STA A,BHPICT+2		;FIRST DOWN MARKER
	LDA I,30		;SMALL CHEER
	STA CHEER		;FOR FIRST, IF NOTHING ELSE
	RTS

	.SBTTL CHECK GOAL
;Y=BALL CARRIER, BLITZ A,X SET WHYEND=2 IF GOAL 5 IF SAFETY

CKGOAL: LDX I,2			;CHECK BOTH GOALS
1$:	LDA AY,HPICT
	STA K			;SAVE FOR OFFENSE/DEFENSE CHECK
	LDA AY,HPOSL
	CMP AX,GOALIN		;COMPARE POSN TO CORRECT GOAL
	LDA AY,HPOSH
	SBC AX,GOALIN+1
	LDA AX,FDDIR
	ADC I,0
	BNE 20$			;OUTSIDE GOAL
	TXA
	EOR HASBAL
	AND I,2			;IS BALL CARRIER ON TEAM(X)
	BEQ 11$			;IF SO SAY TOUCHDOWN
	LSR K			;C SET IF OFFENSE
	BCS 5$
	LDA WHYEND
	CMP I,EC.INT		;INTERCEPTION?
	BNE 20$			;NO, SKIP
	LDA I,EC.TB		;TOUCHBACK
	BNE 15$			;ALWAYS

5$:	LDA WHYEND
	CMP I,EC.TKL			;TACKLE?
	BEQ 6$
	CMP I,EC.OOB		;OUT-OF-BOUNDS
	BNE 20$			;NO, SKIP
6$:	LDA I,2
	STA POINTS
	LDA I,EC.SAF		;SAFETY
	BNE 15$			;ALWAYS***	

11$:	LDA I,EC.TDD		;END-OF-PLAY, TOUCHDOWN
	LSR K
	ADC I,0			;MAKE EC.TDO IF OFFENSE
	STA WHYEND
	LSR			;C=0 IF DEF
	TYA
	AND I,1C
	EOR I,14		;QB?
	BEQ 12$			;YES 7 POINTS
	CLC			;ELSE 6 POINTS
12$:	LDA I,43
	ROL			;6 OR 7 (WITH D7 SET FOR "OFFENSE")
	STA POINTS
	RTS

15$:	STA WHYEND
20$:	DEX
	DEX
	BPL 1$
	RTS
GOALIN:	.WORD 110.*256.+20,10.*256.+0E0	;GOALS FOR 0,2
;Y=PLAYER TO CHECK, RETURNS Z=1 IF PAST SCRIMMAGE LINE
PSCRIM: TYA
	AND I,2
	TAX
	LDA AY,HPOSL
	CMP SCRIMH
	LDA AY,HPOSH
	SBC SCRIMH+1
	LDA AX,FDDIR
	ADC I,0
	RTS

	.SBTTL PASS?
;
;DECIDES WHETHER OR NOT TO PASS, BY LOOKING AT PLAY-SELECT BUTTON IN GAME
;PLAY, OR FAKING IT IN ATTRACT. TO PASS, IT SETS GLOBAL FLAG 10 (D4 IN
;WFLAG) WHICH IS CHECKED BY EXEC WHILE BALL-OPCODE=PASS. NOTE THAT SINCE
;PLAY-SELECT IS USED TO START PASS, THERE MAY BE A CONFLICT
;WITH USE OF OSSTAT. THIS SHOULD BE CAREFULLY CHECKED IF
;CHANGES ARE MADE
;
PASSQ:	LDA WFLAG		;GET GLOBAL FLAGS
	AND I,2			;BALL SNAPPED YET?
	BEQ 10$			;NO, RETURN
	LDA ATRACT		;IN ATTRACT
	BPL 10$			;YES, LET EXEC FAKE IT
	LDX OFFENS		;POINT TO OFFENSE
	LDY ZX,CTLPTR
	BMI 10$			;NO JOYSTICK PLAYER, SKIP
	JSR PSCRIM
	BNE 4$
	STA PSFLAG
	RTS
4$:	LDY ZX,SWSTAT
	TYA
	EOR ZX,OSSTAT
	AND ZX,OSSTAT
	STY ZX,OSSTAT		;CATCH EDGES ON PLAYER CTLS
	AND I,10		;PLAY SELECT BUTTON
	BEQ 10$			;NOT YET
5$:	LDA WFLAG
	ORA I,10		;ELSE SET GLOBAL FLAG 10
	STA WFLAG
10$:	RTS

	.SBTTL 	SET POSITION
SETPOS:	TXA
	PHA
	LDX I,28.
10$:	LDA ZX,OP		;CHECK OP-CODE
	BEQ 20$			;THIS MAN STILL ON END
	CMP I,16.		;MOVE?
	BCS 15$			;YES, DO IT
	CMP I,2			;WAIT?
	BNE 20$			;NO, SKIP IT
15$:	LDA AX,HGOAL		;SET POSITION=GOAL
	STA AX,HPOSL
	LDA AX,HGOAL+1
	STA AX,HPOSH
	LDA AX,VGOAL
	STA AX,VPOS
	LDA I,0
	STA AX,VPOSL
20$:	DEX
	DEX
	BPL 10$
30$:	PLA
	TAX
	RTS
STATS:  LDA SCRIMH
	CMP A,FDHPOS
	LDA SCRIMH+1
	SEC
	SBC A,FDHPOS+1		;GET DIST TO GO FOR FIRST
	BPL 1$			;CAN NOT BE TRUELY NEGATIVE HERE
	EOR I,-1		;SO INVERSION IS DUE TO THIS BEING
	CLC			;PLAYER ZERO, AND CAN BE CORRECTED
	ADC I,1			;WITHOUT LOSING INFORMATION
1$:	BNE 15$
	LDA I,1			;1 YD IS MINIMUM
15$:	LDY I,0
	CMP I,100.
	BCC 2$
	INY			;HUNDREDS DIG. IN Y
	SBC I,100.		;OUT OF ACC
2$:	STY DTG+1		;SAVE HUNDREDS
	LDY I,-1		;PRE-CLEAR "TENS"
	SEC
3$:	INY			;INC 10'S
	SBC I,10.		;RESTORATIVE, ITERATIVE DIVIDE (YECCH!!)
	BCS 3$			;LOOP TILL WE GET A BORROW

4$:	ADC I,10.		;PUT BACK THAT LAST 10
	STA J
	TYA
	ASL
	ASL
	ASL
	ASL			;SHIFT UP TENS
	ORA J			;PUT UNITS IN
	STA DTG			;SAVE AS DECIMAL TO GO
	LDX OFFENS		;POINT TO PRESENT OFFENSE
	LDY I,0
	LDA POINTS		;GET POINTS FOR THIS ENDING
	STY POINTS		;CLEAR IT
	BPL 5$			;IF D7=1, GIVE TO THIS PLAYER
	TAY			;ELSE SAVE PTS
	TXA
	EOR I,2			;FLIP PLAYER
	TAX
	TYA
	AND I,7F		;CLEAR FLAG
5$:	BEQ 6$			;NO POINTS
	LDY I,30		;ELSE STOP
	STY STPCLK		;CLOCK
	BIT ATRACT		;ATTRACT?
	BPL 6$			;YES, DON'T UPDATE SCORE
	SED
	CLC
	ADC ZX,SCORE		;ADD INTO APPROPRIATE SCORE
	STA ZX,SCORE
	LDA I,0
	ADC ZX,SCORE+1
	STA ZX,SCORE+1
	CLD
6$:	JMP DSTAT		;DISPLAY STATISTICS & RTS
	.SBTTL PENALTY
;USES ALL REGS, J; SETS SCRIMH (2 BYTES)
PENAL5:	TXA			;PTR TO PLAYER TO PENALIZE
	EOR I,2
	TAX			;PTR TO HIS OPPONENT
	LDA AX,GOALIN
	SEC
	SBC SCRIMH
	STA J
	LDA AX,GOALIN+1
	SBC SCRIMH+1
	TAY
	BPL 10$
	LDA J			;ELSE TAKE ABS.
	EOR I,-1
	CLC
	ADC I,20
	TYA
	EOR I,-1
	ADC I,0
10$:	CMP I,10.		;!DIST FROM GOAL!<10?
	BCC 12$			;YES, USE HALF OF IT
	LDA I,0
	STA J			;SET LSB'S=0
	CPY I,80		;C<-SIGN OF MSBS
	LDY I,10.		;ASSUME POSITIVE
	BCC 12$			;BRANCH IF SO
	LDY I,-10.		;ELSE SET NEG
12$:	TYA
	CMP I,80		;ASR (Y,J)
	ROR
	TAY
	LDA J
	ROR
	CLC
	ADC SCRIMH
	STA SCRIMH
	TYA
	ADC SCRIMH+1
	STA SCRIMH+1
	JSR INITL		;MOVE ALREADY SET-UP PLAYERS
	TXA
	EOR I,2			;BACK TO CULPRIT
	TAX
	LDA ZX,PSTIM		;DID HE SELECT AT ALL YET
	BMI 2$			;NOPE, SKIP IT
	JSR INITL		;ELSE SET HIM UP IN LAST FORMATION
2$:	JSR HUDDLE		;SET HUDDLE ANYWAY (CAN'T HURT)
	JSR SETPOS
	RTS
FANS:
10$:	LDA CHEER+1		;GET PRESENT CHEER
	CMP CHEER		;COMPARE TO DESIRED
	BCS 12$			;IF PRESENT GREATER, DEC 
	ADC I,20		;ELSE RUN QUICKLY UP
	BCC 18$			;BRANCH NO WRAP
	LDA I,0FF		;ELSE SET MAX AND FALL THROUGH TO RESET
12$:	LDY I,0
	STY CHEER		;RESET DESIRED
	SBC I,3			;DECREASE SLOWLY
	BCS 18$			;BRANCH NO WRAP
	LDA I,0			;ELSE SET MIN
18$:	STA CHEER+1		;SAVE PRESENT
	LSR
	LSR
	LSR
	LSR
	BNE 21$
	LDA I,1			;KEEP SOME SOUND
21$:	STA CROWD
	RTS

	.SBTTL PLAYER-CONTROLS
;*************************
;*
;*PLAY SELECTION
;*
;***************************
;
;DESCRIPTION:
;	IN GAME:
;		-ONCE PER PUSH OF "PLAY-SELECT" BUTTON, ROUTINE
;		1) SETS PSTIM=10.
;		2) SETS CHGFLG & MPSTIM, IF NOT ALREADY RUNNING
;		3) INCREMENTS PLAYNO(X)
;		4) REDUCES PLAYNO(X),MODULO NPLAYS
;		5) SETS LED WD(X) TO LIGHT LAMPS
;		6) CALLS INITL TO SET-UP MEN
;		-REGARDLESS OF BUTTON; DECREMENT PSTIM(X) IF >0
;    IN ATTRACT:
;		-FAKES BUTTON-PRESSING WITH PAUST AS "RANDOM" #,
;		THEN DOES ALL ABOVE STUFF.
;REGISTERS:
;	IN:	DON'T CARE
;	OUT:	X=-2, A&Y-BLITZED
;
;
;STACK USE:	2 BYTES FOR RTN ADDR. OF CALLER
;		+6 BYTES USED BY INITL IF CALLED
;		=8 TOTAL
;
;
;BASE PAGE USE:	READ: SWSTAT
;		MODIFY: OSSTAT, PLAYNO,CHGFLG,MPSTIM,PSTIM
;		WRITE: LEDWD
;		TEMP: -NONE-
PSEL:	LDX I,2
	LDA I,0
	STA LEDTMP
1$:	LDA ATRACT		;IN ATTRACT?
	BMI 5$			;NO, GAME
	LDA ZX,PSTIM		;TIMER STARTED?
	BPL 14$			;YES, RUN IT
	BMI 15$			;ELSE, SELECT IMMEDIATELY
;IN GAME BLINK LICONS, LOOK AT BUTTONS
5$:	LDA Z,FRAME		;FLASH LICON LEDS
	LSR
	LSR
7$:	LDY ZX,PSTIM
	BNE 11$
	CLC
11$:	ROL LEDTMP

	LDY ZX,SWSTAT		;GET NEW
	TYA			;SWITCH STATUS
	EOR ZX,OSSTAT		;CMP TO OLD
	AND ZX,OSSTAT		;CHG TO 0?
	STY ZX,OSSTAT
	AND I,10		;SELECT SWITCH
	BNE 15$			;PRESSED, SELECT PLAY
12$:	LDA ZX,PSTIM		;CHECK TIMER
	BMI 50$			;NOT STARTED, SKIP IT
14$:	BEQ 50$			;TIMED OUT, SKIP
	DEC ZX,PSTIM		;RUN IT
	BPL 50$			;ALWAYS
15$:	LDA MPSTIM		;MASTER TIMER RUNNING?
	BNE 17$			;YES, SKIP IT
	LDA I,230.		;ELSE SET TO 230
	STA MPSTIM		;FOR 11.5 SECOND INTERVAL
17$:	CMP I,30.		;NEAR END?
	BCS 19$			;NO, ALLOW SELECTION
	LDA ZX,PSTIM		;HAS HE SELECTED?
	BEQ 50$			;YES, LOCK IT IN
19$:	LDA I,30.
	STA ZX,PSTIM		;PSTIM:=30. (FOR 1.5 SECOND)

;PLAYNO(X):=MOD(PLAYNO+1,NPLAYS)

20$:	INC ZX,PLAYNO		;BUMP PLAYNO
	LDA ZX,PLAYNO
	AND I,3			;MODULO 4

30$:	STA ZX,PLAYNO
	TAY
	SEC
	LDA I,0
31$:	ROL
	DEY
	BPL 31$
33$:	STA ZX,LEDWD		;LEDWD(X)-2**(PLAYNO(X)-1)
	LDA ZX,PSTIM
	BMI 50$
	JSR INITL		;INIT. MEN
	JSR SETPOS
50$:	DEX
	DEX
	BPL 1$
	LDA LEDTMP
	STA LEDWD+1
	RTS
	.SBTTL UTILITIES
	.SBTTL CLEAR ALPHANUMERICS
CAN:	LDX I,128.
	LDA I,0
1$:	STA AX,ALPHR
	STA AX,ALPHL
	DEX
	BPL 1$
	RTS
;DISPLAY TIME ON BOTH ENDS
DTIME:	LDY I,53		;POSITION FOR TIME
1$:	LDA MINUTE
	JSR ASCAX
	CMP I,'0
	BNE 2$
	LDA I,0
2$:	JSR WRTAN
	TXA
	JSR WRTAN
	LDA I,':
	JSR WRTAN
	LDA SECOND
	JSR ASCAX
	JSR WRTAN
	TXA
	JSR WRTAN
	CPY I,58
	BNE 3$
	LDY I,0CA
	BNE 1$
3$:	RTS
ASCAX:	PHA
	AND I,0F		;ISOLATE LOW NYBBLE
	CMP I,10.		;A-F?
	BCC 1$			;NO, SKIP
	ADC I,6.		;ELSE ADD 7 (6+CARRY)
1$:	ADC I,'0		;MAKE ASCII
	TAX			;X:=LOW NYBBLE
	PLA
	LSR
	LSR
	LSR
	LSR
	CMP I,10.
	BCC 2$
	ADC I,6
2$:	ADC I,'0
	RTS
	.SBTTL IDENTIFY OFFENSE
TELLEM:	LDX I,2			;FOR PLAYER=2,0
10$:	LDA I,M.OFF		;ASSUME OFFENSE
	CPX OFFENS		;IS THAT SO?
	BEQ 20$			;YES, SAY SO
	LDA I,M.DEF		;ELSE SAY DEFENSE
20$:	LDY ZX,PSTIM		;HAS HE SELECTED ONCE(AT LEAST)
	BPL 30$			;YES LEAVE IT AT THAT
	BIT INTCNT		;ELSE FLASH
	BMI 30$			;AT ABOUT 1 HZ
	LDA I,M.SP		;"SELECT PLAY"
30$:	JSR REPLAC		;REPLACE CURRENT WITH NEW
	DEX
	DEX			;NEXT PLAYER
	BPL 10$			;IF HE EXISTS
	RTS

	.SBTTL DISPLAY STATISTICS
DSTAT:	LDX I,3			;START ON RIGHT
1$:	STX K
	LDY AX,SCRPTR		;GET PTR TO DST
	TXA
	LSR			;SET C IF DOING "TO GO"
	LDA ZX,SCORE+1		;HIGH BYTE OF SCORE
	BCC 15$
	LDA DTG+1
15$:	BEQ 3$			;0, SKIP IT
	JSR ASCAX		;CONVERT TO ASCII
	CMP I,'0		;HIGH NYBBLE "0"
	BEQ 2$			;YES, DON'T WRITE IT
	JSR WRTAN
2$:	TXA			;LOW NYBBLE
	JSR WRTAN		;WRITE LOW
3$:	LDX K			;GET BACK PTR
4$:	TXA
	LSR
	TYA
	EOR AX,SCRPTR		;HAS POINTER MOVED
	BEQ 5$			;NO, SUPPRESS 0'S
	LDA ZX,SCORE
	BCC 45$
	LDA DTG
45$:	JSR ASCAX
	JSR WRTAN		;ELSE PRINT BOTH
	JMP 6$

5$:	LDA ZX,SCORE
	BCC 55$
	LDA DTG
55$:	JSR ASCAX
	CMP I,'0		;HIGH NYBBLE=0, SKIP IT
	BEQ 6$
	JSR WRTAN
6$:	TXA
	JSR WRTAN
	LDX K			;GET BACK PTR
7$:	TYA			;GET PTR TO A/N
	CMP AX,SCREND		;END OF FLD
	BEQ 8$			;YES, DONE
	LDA I,0			;ELSE BLANK
	JSR WRTAN
	JMP 7$			;LOOP
8$:	DEX
	BPL 1$			;AND REPEAT
	LDA DOWN		;GET DOWN #
	ORA I,'0		;MAKE IT ASCII
	LDY I,41
	JSR WRTAN
	LDY I,0DC
	JMP WRTAN
SCRPTR:	.BYTE 5A,46,0C3,0D7
SCREND:	.BYTE 5E,49,0BF,0D4

	.SBTTL MESSAGES
WRITEB: LDX I,2			;POINT TO RIGHT PLAYER
	JSR REPLAC		;REPLACE HIS LAST MSG
	LDX I,0			;POINT TO LEFT
;FALL THROUGH TO DO THE SAME FOR LEFT
REPLAC:	CMP ZX,OMESL		;SAME MESSAGE?
	BEQ WRTMES		;YES, JUST REFRESH IT
	PHA			;SAVE NEW MSG#
	LDA ZX,OMESL
	AND I,7F		;STRIP POSSIBLE ERASE BIT
	CMP I,M.GO		;M.GO IS FIRST REPLACEABLE MSG
	BCC 1$			;BRANCH IF NO CONFLICT
	ORA I,80		;SET ERASE BIT
	JSR WRTMES		;TO CLEAR OLD MSG
1$:	PLA			;GET BACK NEW MSG
;FALL THROUGH TO WRITE NEW MSG.
;*************************
;*
;*MESSAGES
;*
;***************************
;
;DESCRIPTION:	IF (ACC>=0) OUTPUT MESSAGE (ACC) ELSE
;		CLEAR MESSAGE (ACC&7F). STOPS WHEN CHAR. HAS
;		D7 SET.
;
;
;REGISTERS:
;	IN:	ACC=MESSAGE #;X=PLAYER # (0-LEFT,2-RIGHT),Y-DON'T CARE
;	OUT:	ACC,X-RESTORED, Y-> NEXT DST POSN
;		OMES(L OR R) =MSG#
;		CARRY SET
;
;
;STACK USE:	2 BYTES FOR RTN ADDR.
;
;
;
;
;BASE PAGE USE:	WRITE: ANMSK,OMESL,OMESR
;
;
;
;
WRTMES:	STX WPLAYR
	STA ZX,OMESL		;GETS OMESR IF X=2
	ASL			;MSG # *2,CARRY=1 IF CLEAR, 0 IF WRITE
	TAY			;POINT INTO MSG TABLE
	LDA I,3F		;MASK TO USE FOR WRITING
	BCC 10$			;BRANCH IF WRITING
	LDA I,0			;ELSE SET MASK=0 TO ERASE
10$:	STA ANMSK
	LDA AY,MTBL+1		;GET SRC PTR
	CPX I,2			;SET CARRY IF X=2 (RIGHT)
	TAX			;X<-SRC
	LDA AY,MTBL		;GET DST PTR
	BCC 20$			;BRANCH IF LEFT
	EOR I,1F		;COMPLEMENT CHAR #
	ADC I,9D		;ACC<-1D-DST+80
	TAY			;Y<- DST PTR
	BMI 30$			;ALWAYS

20$:	EOR I,60		;COMPLEMENT ROW #
	TAY

30$:	LDA AX,MESLST		;GET MSG CHAR
	CMP I,80		;SET C=D7
	AND ANMSK		;STRIP D7,D6 (OR BLANK WHOLE CHAR.)
	JSR WRTAN		;WRT CHAR, BUMP DST PTR

	INX			;BUMP SRC PTR
	BCC 30$
	LDX WPLAYR
	LDA ZX,OMESL		;RESTORE MSG# TO ACC
	RTS

WRTAN:	AND I,3F		;CLEAR REFLECT BITS
	DEY
	INY			;TST Y WITHOUT BLITZING CARRY
	BPL 1$			;IF PLUS, PUT ON LEFT
	STA AY,ALPHR-0A0	;-20 FOR POSITIONING, -80 TO
	DEY			;COMPENSATE FOR FLAG
	RTS
1$:	ORA I,40		;REFLECT CHAR
	STA AY,ALPHL
	INY
	RTS

MTBL:	.BYTE 0,45$-1$,14,46$-1$
	.BYTE 4B,6$-1$,48,7$-1$,48,8$-1$
	.BYTE 4C,9$-1$,4B,10$-1$,4A,11$-1$,4A,12$-1$
	.BYTE 4A,13$-1$,4C,14$-1$,4A,15$-1$,4A,16$-1$
	.BYTE 49,5$-1$,4D,17$-1$,49,0,45,2$-1$,49,3$-1$
	.BYTE 47,18$-1$,41,19$-1$
MESLST	=.
1$:	.ASCIN /INSERT COINS/
2$:	.ASCIN /EACH COIN ADDS TIME/
3$:	.ASCIN /SELECT PLAY/
45$:	.ASCIN /DOWN TO GO/
46$:	.ASCIN /TIME SCORE/
5$:	.ASCIN /DELAY OF GAME/
6$:	.ASCIN /GAME OVER/

7$:	.ASCIN /YOU ARE OFFENSE/
8$:	.ASCIN /YOU ARE DEFENSE/
9$:	.ASCIN	/TACKLED/
10$:	.ASCIN	/TOUCHDOWN/
11$:	.ASCIN	/INCOMPLETE/
12$:	.ASCIN	/INTERCEPTED/
13$:	.ASCIN	/TOUCHBACK/
14$:	.ASCIN	/SAFETY/
15$:	.ASCIN	/OUT OF BOUNDS/
16$:	.ASCIN /OFF SIDES/
17$:	.ASCIN	/READY/
18$:	.ASCIN /GAME ALMOST OVER/
19$:	.ASCIN /INSERT COINS TO KEEP PLAYING/
	.SBTTL TIMER
;***********************
;*
;*TIMER
;*
;*************************
;
;DESCRIPTION:	CALLED ONCE PER FRAME, MAINTAINS TIMER
;		IN MINUTE, SECOND, & FRAME. IF STPCLK NOT 0, ONLY FRAME
;		RUN, IF STPCLK=0, ALL COUNTERS RUN.  RETURNS WITH
;		CARRY SET ONCE PER SECOND. STICKS AT 0:00
;		Z SET IF TIMER=0:00
;		(DECREMENTS STPCLK IF NON-ZERO)
;
;REGISTERS:
;	IN:	DON'T CARE
;	OUT:	ACC=MINUTE!SECOND; X,Y NOT CHANGED
;		Z SET PER ACC. C SET ONCE PER SECOND. D CLEARED
;
;
;STACK USE:	2 BYTES FOR RET. ADDR.
;
;
;
;
;BASE PAGE USE:	MODIFY: FRAME,MINUTE, SECOND, STPCLK
;		READ:	
;
;
;
;
;
TIMER:	CLC			;CLEAR "ONCE PER SECOND" FLAG
	LDA MINUTE
	DEC FRAME		;COUNT FRAMES
	BPL 2$
	LDA I,19.		;RESET FOR 20 FRAME COUNT
	STA FRAME
	CLC			;SET BORROW
	LDA STPCLK		;STOP CLOCK?
	BEQ 10$			;NO, RUN
	DEC STPCLK		;RUN STOPPER
	SEC			;CLR BORROW
10$:	LDA SECOND
	SED
	SBC I,0			;SUBTRACT 1 OR 0
	BCS 1$			;BRANCH NO BORROW
	LDA I,59		;IF BORROW SET 59 SECONDS
1$:	STA SECOND
	LDA MINUTE
	SBC I,0
	CLD
	BCS 2$			;BRANCH NO BORROW
;IF WRAP, STICK AT 0
	LDA I,0
	STA SECOND
	SEC			;ONCE PER SECOND FLAG
2$:	STA MINUTE
	ORA SECOND
	RTS

;*************************
;*
;*INCREASE TIMER
;*
;***************************
;
;DESCRIPTION:	ADDS 1:30, 2:00, 2:30, OR 3:00 TO TIMER EACH TIME
;		IT IS CALLED, STICKS AT 99:59. CARRY SET IF
;		ATTEMPTED WRAP
;
;
;REGISTERS:
;	IN:	DON'T CARE
;	OUT:	ACC=MINUTE;X NOT CHANGED; Y="COIN MODE"; C SET IF ATTEMPTED WRAP
;
;
;
;STACK USE:	2 BYTES, RTN ADDR.
;
;
;
;
;BASE PAGE USE:	MODIFY:SECOND, MINUTE
;
;
;
;
UPTIME: SED
	LDA OPTION		;GET OPTION SWITCHES
	AND I,3			;ISOLATE SW 1,2
	TAY
	LDA AY,TIMTBL
	CLC
	TAY
	AND I,0F0		;ISOLATE 0X OR 3X
	ADC SECOND
	CMP I,60
	BCC 1$
	SBC I,60
1$:	STA SECOND
	TYA
	AND I,0F		;ISOLATE X1,X2,X3
	ADC MINUTE
	BCC 2$
	LDA I,59
	STA SECOND
	LDA I,99
2$:	STA MINUTE
	CLD
	RTS
TIMTBL:	.BYTE 31,02,32,03	;REVERSED MIDDLE DIGITS
	.SBTTL SETUP STUFF
SETBAL:	LDA A,BHPOSH
15$:	LDY A,BHPOSL
	STY A,SCRIMH		;SET SCRIMMAGE LINE
	STA SCRIMH+1
	LDA A,BVPOS
	CMP I,70		;BELOW HASH MARKS?
	BCS 2$
	LDA I,70		;SET ON BOTTOM HASH MARK
2$:	CMP I,98		;ABOVE?
	BCC 3$
	LDA I,98		;SET ON TOP HASH-MARKS
3$:	STA SCRIMV
	LDA I,18
	STA A,BHPICT		;SET PICTURE
	RTS
CKS1:	.BYTE 0B4
	.SBTTL INIT. "PROGRAM" FOR MEN
;STACK USE
;SETS UP MCC FOR ALL MEN ON TEAM (POINTED TO BY X) AND FETCHES FIRST INSTRUCTION
INITL:	LDA I,18
	STA A,BHPICT		;OBJECT 14 IS BALL
	LDA I,248.
	STA A,FDVPOS+1		;FIRST-DOWN MARKER
	STX PLAYER		;SAVE PLAYER #
	TXA
	ORA I,18
	TAX
3$:	TXA
	EOR OFFENS
	TAY			;SAVE PERMUTED PTR
	AND I,2			;GET PLAYER EOR OFFENSE
	LSR			;IN DO
	EOR I,15		;IF PLAYER=0FF, THEN 15 (0), ELSE 14(X)
	STA AX,HPICT		;SET PICTURE
	TYA			;GET PTR BACK
	ADC I,0
	.=.-1
	.WORD FTAB-1		;ADC I,<FTAB-1>&0FF
	.=.-1
	STA ZX,MCC
	LDA I,0
	STA AX,FLAGS		;RESET FLAGS WITH HANDY 0
	ADC I,0
	.=.-1
	.ENABL M68
	.WORD FTAB-1		;ADC I,<FTAB-1>&0FF00/100
	.DSABL M68
	.=.-1
	STA ZX,MCC+1
	JSR DECODE		;PROCESS H&V GOALS
	DEX
	DEX
	DEX
	DEX			;DOWN TO NEXT PLAYER
	BPL 3$
	LDX PLAYER
1$:	LDA ZX,PLAYNO		;GET PLAY #
	CMP I,NPLAYS		;VALID?
	BCC 2$			;YES
	SBC I,NPLAYS		;ELSE TAKE IT MODULO NPLAYS
	STA ZX,PLAYNO
	BCS 1$   		;ALWAYS
2$:	LDA I,-1
	STA ZX,CTLPTR		;RESET CONTROL (JOYSTICK) POINTER
	STA HASBAL		;AND BALL-POSSESION
	LDA ZX,PLAYNO	
	ASL			;PLAY #*2
	ASL			;PLAY #*4
	ORA OFFENS		;SET D1 IF RIGHT IS OFFENSE
	EOR PLAYER		;COMPLEMENT D1 IF TEAM IS RIGHT
	TAY			;POINT TO PLAY PTR
	LDA AY,PTBL		;GET ADL OF PLAY
	STA ZX,MCC
	LDA AY,PTBL+1		;ADH OF PLAY
	STA ZX,MCC+1
4$:	STX OBJECT
	JSR DECODE		;BUMP PC & DECODE OP
	TXA
	AND I,1C
	CMP I,18		;LAST MAN?
	BEQ 7$			;YES, FINISHED
	LDA ZX,MCC
	STA ZX,MCC+4
	LDA ZX,MCC+1
	STA ZX,MCC+5		;COPY PC UP ONE SLOT (FOR THIS PLAYER)
	INX
	INX
	INX
	INX
	JSR SCANIT
	JMP 4$
7$:	LDA I,0
	STA WFLAG		;CLEAR WAIT-FLAGS
	TXA
	AND I,2			;ISOLATE PLAYER #
	CMP OFFENS		;AM I OFFENSE?
	BNE 8$			;NO, SKIP

;SET UP MCC FOR BALL, AND FETCH FIRST BALL INST.
	LDA ZX,MCC
	STA MCC+<BALLNO*2>
	LDA ZX,MCC+1
	STA MCC+1+<BALLNO*2>
	LDX I,BALLNO*2
	JSR SCANIT		;PASS LAST PLAYER'S STUFF
	JSR DECODE		;DECODE FIRST INST.
	LDA I,0
	STA A,FLAGS+<BALLNO*2>
8$:	LDX PLAYER
	RTS
SCANIT:	JSR INCMCC		;SCAN LIST
	LDA NX,MCC		;CHECKING OPCODES (END=0)
	BNE 1$
	RTS			;IF END, SET-UP THIS MAN
1$:	JSR INCMCC		;SKIP BYTE
	JMP SCANIT			;AND SCAN

	.SBTTL FETCH & DECODE
;FETCH NEXT MAN-CONTROL INSTRUCTION FROM (MCC(X)) BUMP MCC(X), BLITZ A,Y
DECODE:	JSR INCMCC		;PRE-INC MCC
	LDA I,0
	STA ZX,PARAM		;***INSURANCE
	LDA NX,MCC		;FETCH OP-CODE
D.STOP:	STA ZX,OP		;SAVE IT
	BEQ 1$			;0 (END) IS SINGLE BYTE
	JSR INCMCC
	LDA NX,MCC		;ELSE FETCH SECOND BYTE
	STA ZX,PARAM		;MAKE IT PARAMETER
1$:	SEC

	.SBTTL	OP-DECODE
;ENTERED WITH CARRY SET FROM "DECODE", CARRY CLEAR
;FROM EXEC PICKS UP OP(X) AND JUMPS TO APPROPRIATE
;ROUTINE

OPDEC:	TXA
	AND I,2			;ISOLATE PLAYER
	STA PLAYER		;SAVE FOR USE IN VARIOUS DECODES
	LDA ZX,OP		;GET OP
	BEQ D.NULL		;END RETURNS FOR EITHER
	BIT A,MF0		;MOVE 1FF > 15.
	BEQ 1$			;IF NOT, PROCEED
	LDA I,0			;ELSE SUBSTITUTE 0
1$:	ROL			;INSERT DECODE/EXEC BIT
	CMP I,14.		;VALID OPS ARE 0-6 (*2)
	BCS D.ERR		;OP INVALID, ABORT
	ASL
	TAY
	LDA AY,ODTAB+1
	PHA
	LDA AY,ODTAB
	PHA
D.NULL:	RTS
MF0:	.BYTE 0F0
ODTAB:	.WORD X.MOV-1,D.MOV-1,X.JOY-1,D.JOY-1
	.WORD X.WAI-1,D.NULL-1,X.ERR-1,D.SET-1
	.WORD X.TRK-1,D.NULL-1,X.TRK-1,D.BLK-1
	.WORD X.PAS-1,D.PAS-1
X.ERR:	BRK			;"EXECUTE" OF SET IS NO-NO
D.ERR:	LDA I,0
	BEQ D.STOP		;STOP PLAYER
D.BLK:	LDA ZX,PARAM		;"BLOCK" HAS ALLY # IN "ENDS"
	CMP I,80
	ROL			;ROL ACC W/O CARRY
	CMP I,80
	ROL
	ASL
	ASL
	AND I,3C		;CLEAN UP OBJECT #
	BNE 13$			;BRANCH IF MAN
	LDA I,BALLNO*2		;ELSE POINT TO BALL
	BNE 15$			;***ALWAYS

13$:	ORA PLAYER		;INSERT PLAYER #
	BIT A,M20		;CHECK FRIEND/FOE
	BEQ 14$			;LEAVE FRIEND ALONE
	EOR I,22		;ELSE CLEAR BIT & TOGGLE PLAYER
14$:	SEC
	SBC I,4
15$:	STA ZX,PARAM
	RTS
	
	
D.JOY:	STX OBJECT
	CPX I,BALLNO*2
	BNE 21$
	LDX OFFENS
	BPL 22$			;ALWAYS
21$:	TXA			;GET OBJECT #
	AND I,2			;ISOLATE PLAYER #
	TAX
22$:	LDY ZX,CTLPTR		;GET OLD CONTROL PTR
	CPY I,28.
	BCS 25$			;BRANCH IF NO OLD OR OLD IS BALL
	LDA AY,HPICT		;GET OLD MAN'S PICT
	AND I,0FD		;CLEAR D1
	STA AY,HPICT		;TO MAKE SMALL
25$:	LDY OBJECT
	CPY I,28.		;BALL
	BNE 26$
	LDX OFFENS		;PT TO OFFENSE
	BPL 27$			;***ALWAYS

26$:	LDA AY,HPICT		;GET PICT
	ORA I,2			;SET D1
	STA AY,HPICT		;TO MAKE LARGE
27$:	STY ZX,CTLPTR		;POINT TO NEW MAN
	LDA I,0
	STA ZX,TBHD		;INITIALIZE TRACK-BALL
	STA ZX,TBVD		;COUNTERS
	LDX OBJECT
	LDA ATRACT		;IN GAME?
	BMI 30$			;YES, DRIVE
	LDA ZX,PARAM
	CLC
	ADC ZX,MCC
	STA ZX,MCC
	BCC 29$
	INC ZX,MCC+1
29$:	JMP DECODE		;REL. "BRANCH" TO ATTRACT ROUTINE
30$:	RTS
	
D.MOV:	LDA ZX,OP		;OP CONTAINS VERT. GOAL
	EOR I,128.		;REMOVE BIAS FROM OP-CODE (V-GOAL)
	LDY PLAYER		;PLAYER?
	BEQ 9$			;0, SKIP
	EOR I,0FF		;ELSE
	CLC			;FLIP
	ADC I,1
9$:	CMP I,-80.		;MAX NEGATIVE DISPLACEMENT?
	BEQ 15$			;SET BOTTOM SIDLINE IF SO
	CMP I,80.		;MAX POSITIVE DISPLACEMENT?
	BEQ 10$			;SET TOP SIDELINE IF SO
	CLC
	ADC SCRIMV		;OP IS VERT DISP.FROM SCRIMV
	BNE 36$			;*** ALWAYS (UNLESS FBCHOR SCREWS UP)
10$:	LDA I,247.		;ONE LINE SHY OF TOP OF SCREEN
	BNE 36$			;REALLY ALWAYS

15$:	LDA I,17.		;ONE LINE SHY OF BOTTOM OF SCREEN
36$:	STA AX,VGOAL
	LDA I,0
	STA K
	TXA			;WHAT OBJECT IS THIS
	CMP I,BALLNO*2
	BNE 37$			;IF MAN, CHECK SIDE
	LDA OFFENS		;ELSE IS BALL, ASSOCIATE WITH OFFENSE
37$:	LSR
	LSR			;SET C IF RIGHT IS OFFENSE
	LDA ZX,PARAM		;PARAM IS HORIZ GOAL (RELATIVE TO SCRIMH)
	BCC 4$			;BRANCH IF LEFT
	EOR I,0FF
	ADC I,0			;ELSE NEGATE
4$:	CMP I,127.		;MAX POSITIVE VALUE?
	BEQ 51$			;YES, SET TO RIGHT GOAL
	CMP I,-127.		;MAX NEGATIVE VALUE?
	BEQ 47$			;YES, SET TO LEFT GOAL
	CMP I,80
	ROR			;ASR
	ROR K
	CMP I,80
	ROR
	ROR K
	CMP I,80
	ROR
	ROR K
	PHA
	LDA K
	CLC
	ADC SCRIMH
	STA AX,HGOAL		;STASH LSB'S
	PLA
	ADC SCRIMH+1
	BPL 5$
47$:	LDA I,2			;SET TO JUST RIGHT OF LEFT END
5$:	CMP I,FL-2		;PAST RIGHT END OF FIELD?
	BCC 6$			;NOPE
51$:	LDA I,FL-2		;SET TO JUST LEFT OF RIGHT END
6$:	STA AX,HGOAL+1
;SINCE HGOAL (LSB'S) IS UNTOUCHED WHEN HGOAL+1 IS SET TO ITS LIMITS,
;THERE WILL BE SOME VARIANCE IN THE GOAL SOUGHT IN THIS CASE. I DON'T
;THINK THIS WILL BE A PROBLEM
	LDA AX,FLAGS		;GET INDIV. FLAGS
	AND I,7F		;RESET D7
	STA AX,FLAGS		;TO SAY "NOT IN PLACE"
	RTS

D.PAS:	LDA ZX,PARAM
	ASL
	ASL
	ORA OFFENS
	SEC
	SBC I,4
	STA REC1
	LDA ZX,PARAM
	ASL
	ROL
	AND I,1			;ISOLATE LENGTH CODE
	TAY
	LDA AY,PLTAB		;LOOK UP LENGTH
	STA ZX,PARAM		;STASH IT
	LDA AX,FLAGS
	AND I,0FD		;CANCEL "IN PASS"
	STA AX,FLAGS
	LDA WFLAG		;CANCEL "PASS" COMMAND
	AND I,0EF
	STA WFLAG
	RTS
	
	
D.SET:	LDA ZX,PARAM
	ORA WFLAG
	STA WFLAG
	JMP DECODE
M20:	.BYTE 20
INCMCC:	INC ZX,MCC
	BNE 1$
	INC ZX,MCC+1
1$:	RTS
HUDDLE:TXA
	PHA		;SAVE X IN CASE IT POINTS TO PLAYER
	LDX I,28.		;START WITH BALL
	LDY OFFENS		;AND HIS OWNER
	BPL 11$			;ALWAYS
	
10$:	TXA
	AND I,2
	TAY			;PT TO PLAYER
11$:	LDA AY,PSTIM		;SELECTED?
	BPL 15$			;YES, SKIP
	TXA
	LSR			;DE-INTERLEAVE
	AND I,1E		;CLEAR PLAYER BIT
	ADC I,0
	.=.-1
	.WORD HTAB-1		;ADC I,HTAB-1&0FF
	.=.-1
	STA ZX,MCC		;BUILD PTR TO HTAB
	LDA I,0
	STA AX,FLAGS		;CLEAR FLAGS WHILE WE HAVE A "0"
	ADC I,0
	.=.-1
	.ENABL M68
	.WORD HTAB-1		;ADC I,HTAB-1&0FF00/100
	.DSABL M68
	.=.-1
	STA ZX,MCC+1
	JSR DECODE		;DECODE PHONEY "MOVES"
	LDA I,2
	STA ZX,OP		;"WAIT"
	LDA I,0
	STA ZX,PARAM		;FOREVER
	LDA AX,HPICT
	AND I,0FD
	STA AX,HPICT
15$:	DEX
	DEX			;DOWN TO NEXT MAN
	BPL 10$			;IF THERE IS ONE
	PLA
	TAX			;RESTORE X
	RTS
	.SBTTL CHANGE TEAMS
CHANGE:	LDA I,14.		;14 PLAYERS TO CHANGE
	STA INPLCE		;SELECT WON'T MIND IF WE USE HIS COUNTER
	LDX I,26.
10$:	TXA
	EOR OFFENS		;SEE IF THIS PLAYER IS O OR D
	LSR
	AND I,1
	EOR I,15		;GET CORRECT PICTURE
	TAY			;SAVE IT
	EOR AX,HPICT		;"COMPARE" TO PRESENT
	AND I,0FD		;WITH SIZE A "DON'T CARE"
	BNE 20$			;NOT RIGHT YET
	DEC INPLCE		;COUNT THE RIGHT ONES
	JSR EXEC		;AND LET THEM MOVE TOWARD HUDDLE
	JMP 40$			;CONTINUE

20$:	LDA AX,VPOS		;CHECK HIS POSITION
	BPL 25$
	EOR I,0F8
25$:	AND I,0F8
	BNE 30$			;STILL ON FIELD, KEEP MOVING
	LDA AX,HGOAL		;ELSE SET TO DESIRED GOAL
	STA AX,HPOSL
	LDA AX,HGOAL+1
	STA AX,HPOSH
	TYA			;GET PICT BACK
	STA AX,HPICT		;AND SET HIM RIGHT
	BNE 40$			;(ALWAYS) CONTINUE

30$:	TXA
	AND I,2			;GET PLAYER #
	LSR			;MAKE IT 0 OR 1, CLEAR CARRY
	TAY
	LDA AX,VPOS
	CLC
	ADC AY,CHDTAB		;MOVE PLAYER
	STA AX,VPOS
40$:	DEX
	DEX
	BPL 10$
	LDA INPLCE		;HOW MANY TO GO?
	BNE 50$			;STILL SOME
	LDA OFFENS
	STA OLDOFF		;ELSE SET OLDOFF=OFFENS
50$:	RTS

CHDTAB:	.BYTE -4,4		;MOVE 0'S MEN DOWN, 2'S UP

	.SBTTL EXECUTE CHOREOGRAPHY
EXEC:	STX OBJECT
	.REPT 0			;DISABLE PERMANENTLY

;**********
;THIS SECTION FOR DEBUG
	LDA WFLAG
	AND I,2
	BEQ 1$
	LDA OPTION+2
	AND I,4		;SW 3
	BNE 1$
	TXA
	LSR
	TAY
	LDA AY,EFLAG		;***DEBUG
	BNE 1$
	RTS
;**********
	.ENDR

1$:	TXA
	AND I,2			;ISOLATE PLAYER #
	STA PLAYER		;AND SAVE IT
	CLC
	JMP OPDEC		;DECODE OP
X.FNI:	JMP DECODE

X.MOV:	JSR EXECM		;DO MOVE, SET CARRY IF DONE
	BCS X.FNI			;IF DONE, FETCH NEXT INSTRUCTION
X.EXIT:	RTS
	
X.JOY:	LDA ATRACT		;IN ATTRACT?
	BPL X.FNI		;YES, JOY IS A NOP (INSURANCE)
				;CONVERT OBJECT #*4 + PLAYER #
	LDX PLAYER		;GET PLAYER #
2$:	LDY ZX,CTLPTR		;CHECK PLAYER'S POINTER TO CONTROLLED MAN
	CPY OBJECT		;IS IT STILL POINTING TO THIS PLAYER?
	BEQ 3$			;YES, DO IT
	LDX OBJECT		;ELSE POINT BACK TO OBJECT
	BPL X.FNI		;(**ALWAYS**) RELEASE AND FETCH NEXT INSTRUCTION
	
				;PT TO OBJECT CONTROLLED
3$:	LDA AY,FLAGS		;GET CONTROLLED OBJECT FLAGS
	ORA I,80		;SET "IN PLACE" FLAG
	STA AY,FLAGS
	JMP X.TBAL
X.WAI:	LDA ZX,PARAM
	BIT WFLAG		;IS WAIT OVER?
	BNE X.FNI			;YES, BUMP TO NEXT INST
;FOLLOWING IS HOOK FOR SNEAK
	LDA WFLAG
	AND I,3
	CMP I,1			;BALL BEING SNAPPED
	BNE EXECM		;NO RE-DO LAST "MOVE"
	RTS

X.TRK:	LDA AX,HPICT
	LSR
	BCS 5$			;BRANCH ON OFFENSE
	LDA PSFLAG		;Q.B. PAST?
	BEQ 10$			;YES, CHASE HIM
5$:	LDA NX,MCC		;GET OBJ # TO TRACK
	AND I,3C		;CLEAN UP #
	BNE 13$
10$:	LDA I,BALLNO*2
	BNE 15$			;***ALWAYS
	
13$:	ORA PLAYER		;LEFT/RIGHT
	BIT A,M20		;CHECK FRIEND/FOE BIT
	BEQ 14$			;LEAVE FRIEND ALONE
	EOR I,22		;ELSE CLEAR BIT & CHANGE PLAYER.
14$:	SEC
	SBC I,4
15$:	TAY
X.TRKB:	LDA AY,HPOSH		;BALL ENTER HERE FOR AUTO-PASS
	STA AX,HGOAL+1
	LDA AY,HPOSL
	STA AX,HGOAL
	LDA AY,VPOS
	STA AX,VGOAL
	LDA ZX,OP
	CMP I,5   		;BLOCK?
	BNE EXECM		;NO,JUST TRACK
X.BLKE:	LDY ZX,PARAM		;EXTRAS FOR BLOCK
	LDA AY,HPOSL
	SEC
	SBC AX,HGOAL
	STA THINC
	LDA AY,HPOSH
	SBC AX,HGOAL+1
	STA THINC+1
	LDA AY,VPOS
	SEC
	SBC AX,VGOAL
	STA TVINC+1
	LDA I,1
	STA LIMIT+1
	LDA I,0
	STA TVINC
	STA LIMIT
	JSR SPDLIM
	LDA AX,HGOAL
	CLC
	ADC THINC
	STA AX,HGOAL
	LDA AX,HGOAL+1
	ADC THINC+1
	STA AX,HGOAL+1
	LDA AX,VGOAL
	CLC
	ADC TVINC+1
	STA AX,VGOAL
EXECM:	JMP NUXCMV
X.PAS:	LDA AX,FLAGS		;CHECK BALL'S PRIVATE FLAGS
	AND I,2			;D1=IN PASS
	BEQ 2$			;NOT STARTED YET, CHECK FLAG
	LDA HASBAL		;COMPLETE?
	BMI 10$			;NO, TIME IT
	JMP DECODE		;ELSE PROCEED
10$:	LDA ZX,PARAM		;GET LENGTH TIMER
	BEQ 1$			;INSURANCE
	DEC ZX,PARAM		;RUN TIMER
	BEQ 1$			;RAN OUT, INCOMPLETE
	LDY REC1		;AUTO-DRIVE TOWARD RECEIVER
	JMP X.TRKB
1$:	LDA I,EC.INC		;"PASS INCOMPLETE" CODE
	STA WHYEND		;SET FOR END OF PLAY
	RTS
2$:	LDA WFLAG		;GET GLOBAL FLAGS
	AND I,10		;FLAG 10 (D4) IS PASS-START
	BEQ 4$			;NOT YET, SKIP
	LDX OFFENS		;POINT TO OFFENSE
	LDY ZX,CTLPTR		;POINT TO PASSER
	LDA AY,HPICT
	AND I,0FD		;SHRINK PASSER
	STA AY,HPICT
3$:	LDA I,-1		;RESET HASBAL
	STA ZX,CTLPTR
	STA HASBAL		;TO DECLARE FREE BALL
	LDA A,FLAGS+<BALLNO*2>
	ORA I,2			;SET "IN PASS" FLAG
	STA A,FLAGS+<BALLNO*2>
4$:	LDX OBJECT		;RESTORE X
	RTS
;ENTERED WITH X->PLAYER, A=TBVD(X), THINC=TBHD(X)
X.LIM:	.BYTE 30
X.TBLIM:TAY			;SAVE V
	BPL 1$			;TAKE ABS VAL
	EOR I,0FF
	CLC
	ADC I,1
1$:	CMP A,X.LIM		;!V! < X.LIM?
	BCC 2$			;YES, LEAVE IT
	LDA A,X.LIM		;ELSE USE X.LIM
2$:	CPY I,80		;CHECK IF ORIG WAS +
	BCC 3$			;BRANCH IF SO
	EOR I,0FF		;ELSE MAKE - X.LIM
	ADC I,0			;CARRY SET, ADDS 1
3$:	STA TVINC
	LDA THINC		;GET THINC AND REPEAT
	TAY			;THE PROCESS
	BPL 4$
	EOR I,0FF
	CLC
	ADC I,1
4$:	CMP A,X.LIM
	BCC 5$
	LDA A,X.LIM
5$:	CPY I,80
	BCC 6$
	EOR I,0FF
	ADC I,0
6$:	STA THINC		;SAVE H
	LDA TVINC		;GET BACK V
	RTS			;AND REJOIN MAIN
X.TBAL: LDY I,0
	LDA ZX,TBHD		;WE HAVE A 4 CYCLE HAZARD HERE
	STY ZX,TBHD		;WHICH I THINK WE WILL HAVE TO LIVE WITH
	BPL 10$
	DEY			;SIGN EXTEND
10$:	STA THINC		;SAVE LSB'S OF TBHP(X)
	STY THINC+1		;SAVE MSB'S OF TBHP(X)
	LDY I,0
	LDA ZX,TBVD
	STY ZX,TBVD		;SAME HAZARD HERE
	JSR X.TBLIM
	LDX OBJECT
	ASL
	ROL
	ROL			;(TBVD(X))*8 IN ACC,C
	TAY			;SAVE 5 LSB FOR LS BYTE
	AND I,0F8		;ISOLATE 5 LSB IN MSB'S OF LS BYTE
	STA TVINC
	TYA
	ROL			;FINISH "*8" FOR MS BYTE
	AND I,7			;ISOLATE 3 MSB IN LSB'S OF MS BYTE
	CMP I,4
	BCC 30$
	ORA I,0F8		;SIGN EXTENDED
30$:	STA TVINC+1
	LDA AX,FLAGS		;CHECK FLAGS FOR THIS OBJECT
	LSR			;D0=IN COLLISION
	BCS 70$			;MOVE SLOW IF SO
	TXA
	AND I,2			;ISOLATE PLAYER #
	CMP OFFENS		;IS HE OFFENSE
	BEQ 50$			;YES, MOVE SLOW H,FAST V
	LDA THINC+1
	CMP I,80
	ROR
	TAY
	LDA THINC		;FOR NET 3*(THINC)
	ROR
	CLC
	ADC THINC
	STA THINC
	TYA
	ADC THINC+1
	STA THINC+1
	JMP 70$
50$:	LDA OFSPDT		;OFFENSE SPEED TIMER
	BEQ 70$			;RAN OUT
	LDA TVINC+1
	CMP I,80
	ROR
	TAY
	LDA TVINC
	ROR
	CLC
	ADC TVINC
	STA TVINC
	TYA
	ADC TVINC+1
	STA TVINC+1
70$:
MOVER:	LDA I,0
	STA J
	LDA THINC		;MOVE TEMP HINC
	STA AX,HINC		;TO REAL HORIZ INCR
	CLC
	ADC AX,HPOSL
	TAY
	LDA THINC+1
	STA AX,HINC+1
	ADC AX,HPOSH	;ADD TO H-POSN
	BNE 2$
	LDY I,0E0	;IF 0, MAKE 0.E0
	STY J
2$:	CMP I,120.
	BCC 3$
	LDA I,120.
	STA J
	LDY I,0
3$:	STA AX,HPOSH
	TYA
	STA AX,HPOSL
	LDA TVINC
	STA AX,VINC
	CLC
	ADC AX,VPOSL
	TAY
	LDA TVINC+1
	STA AX,VINC+1
	ADC AX,VPOS
	CMP I,16.
	BCS 4$
	LDA I,16.
	STA J
	LDY I,0E0
4$:	CMP I,248.
	BCC 5$
	LDA I,248.
	STA J
	LDY I,0
5$:	STA AX,VPOS
	TYA
	STA AX,VPOSL
	LDA J
	BEQ 7$
	CPX HASBAL
	BNE 7$
6$:	LDA I,EC.OOB		;"OUT OF BOUNDS"
	STA WHYEND		;SET END OF PLAY
7$:	RTS

	.SBTTL NEW EXEC MOVE
;USES DIRECT & SPDLIM TO SET UP THINC & TVINC
NUXCMV:	JSR DIRECT		;SET THINC & TVINC TO DESIRED VECT.
	LDA THINC
	ORA THINC+1
	ORA TVINC
	ORA TVINC+1
	BEQ 10$
	LDA AX,HPICT
	LSR			;DEFENSE?
	LDA AX,FLAGS
	AND I,4			;IN COLLISION WITH OPPONENT?
	BEQ 45$			;NO, SKIP
	BCC 44$
	LDA OFSPDT
	BNE 45$
	LDA FRAME
	LSR
	BCS 45$
	RTS
44$:	LDY PLAYER		;GET PLAYER #
	LDA AY,PLAYNO
	CMP I,2			;SET C IF PASS PLAY SELECTED
	ROR			;GET IT IN SIGN
	EOR AX,VPOS		;EOR WITH "TOP OF SCREEN"
	ASL			;C=RUN IN TOP/PASS IN BOTTOM
	LDA I,1			;ONE DOT MOTION
	BCS 42$			;MOVE UP IF SET
	LDA I,-1
42$:	STA TVINC+1		;SET IN TEMP VERT INC
	LDA I,0
	STA TVINC
	STA THINC
	STA THINC+1		;CLEAR HORIZ MOVEMENT
	JMP MOVER

45$:	LDA I,0
	STA LIMIT+1
	BIT STATE		;CHECK FOR "PLAY" STATE
	LDA ATRACT		;ATTRACT
	BMI 47$			;NO, GAME
	LDA AX,HPICT		;IN ATTRACT
	LSR			;CHECK FOR DEF.
	BVC 49$			;NOPE, MOVE EVERYBODY FAST
	LDA I,48
	BCC 48$			;BRANCH IF DEFENSE
47$:	LDA I,40
48$:	CPX I,BALLNO*2		;BALL
	BNE 5$			;NO, 2 DOTS MAX
49$:	LDA I,0A0		;BALL 5 DOTS MAX
5$:	STA LIMIT
	JSR SPDLIM
	JMP MOVER
10$:	LDA AX,FLAGS
	ORA I,80		;SET "AT GOAL" FLAG
	STA AX,FLAGS
	RTS
	.SBTTL DIRECTION
;SETS HINC & VINC TO DISPLACEMENT FROM (H/V) POS TO (H/V) GOAL
DIRECT:	LDA AX,VGOAL
	SEC
	SBC AX,VPOS
	PHA			;SAVE DIFFERENCE
	BCC 1$
	EOR I,80		;EOR CARRY,D7
1$:	ASL			;C=C.EOR.D7
	PLA			;GET DIFFERENCE BACK
	BCS 2$			;IF C.EOR.D7=1, SIGN IS OK
	ASL			;ELSE WAS O'FLO, GET ERRONEOUS SIGN
	LDA I,7F		;SET MAX POS.
	ADC I,0			;CHANGE TO MAX NEG IF SIGN WAS MINUS
	EOR I,0FF		;FLIP, CUZ SIGN WAS WRONG
2$:	STA TVINC+1		;VERT. DISPLACEMENT (TEMP, FOR MOVEMENTS)
	LDA I,0
	STA TVINC		;KEEP LSB'S 0
	LDA AX,HGOAL
	SEC
	SBC AX,HPOSL
	STA THINC
	LDA AX,HGOAL+1
	SBC AX,HPOSH
	STA THINC+1
	RTS
	.SBTTL SPEED-LIMIT
;SCALES HINC(X) & VINC(X) SUCH THAT TOTAL INCREMENT IS LESS THAN OR
;EQUAL TO LIMIT
SPDLIM:	LDA THINC
	LDY THINC+1
	BPL 10$
	EOR I,0FF
	CLC
	ADC I,1			;ABS VAL OF HINC(X)
	PHA
	TYA
	EOR I,0FF
	ADC I,0
	TAY
	PLA
10$:	STA HABS		;SAVE AS HABS
	STY HABS+1
	LDA TVINC
	STA VABS
	LDY TVINC+1
	BPL 20$
	EOR I,0FF
	CLC
	ADC I,1
	STA VABS
	TYA
	EOR I,0FF
	ADC I,0			;ABS VAL OF VINC(X)
	TAY			;CHA-CHA-CHA (ONE-TWO-CHA-CHA-CHA!!!)
20$:	TYA
	LSR
	ROR VABS
	LSR
	ROR VABS
	LSR
	ROR VABS		;SCALE VABS TO MATCH HABS
	STA VABS+1
	TXA
	PHA			;SAVE OBJECT PTR
;NOW FIND MAX FOR SCALING
40$:	LDX I,0			;POINT TO HABS
	LDA HABS
	CMP VABS
	LDA HABS+1
	SBC VABS+1		;D.P. COMPARE VABS: HABS
	BCS NSL			;BRANCH IF HABS >= VABS
	LDX I,2			;ELSE POINT TO VABS
;X POINTS TO MAX IN HABS OR VABS
NSL:	LDA LIMIT
	CMP ZX,HABS
	LDA LIMIT+1
	SBC ZX,HABS+1		;D.P. COMPARE MAX: LIMIT
	BCC SCALE		;IN RANGE, SKIP IT
	JMP RECON
;DIVSOR=MAX, MAC=LIMIT
SCALE:	LDA ZX,HABS
	STA DIVSOR		;ELSE DIVSOR=MAX
	LDA ZX,HABS+1
	STA DIVSOR+1
	LDA LIMIT
	STA ZX,HABS
	LDA LIMIT+1
	STA ZX,HABS+1
	TXA
	EOR I,2
	TAX			;PT TO MIN
;QUOT=MIN/MAX		;CARRIED TO 3 BITS
	LDA ZX,HABS
	STA QUOT+1
	LDA ZX,HABS+1
	STA QUOT+2
	LDY I,3
10$:	LDA QUOT+1
	CMP DIVSOR
	LDA QUOT+2
	SBC DIVSOR+1
	BCC 15$
	STA QUOT+2
	LDA QUOT+1
	SBC DIVSOR
	STA QUOT+1
	SEC
15$:	ROL QUOT
	ROL QUOT+1
	ROL QUOT+2
	DEY
	BNE 10$
;QUOT(+1,+2)=QUOT*LIMIT
	LDA LIMIT
	STA DIVSOR
	LDA LIMIT+1
	STA DIVSOR+1
	LDA I,0
	STA QUOT+1
	STA QUOT+2
	LDY I,3
20$:	LSR QUOT
	BCC 25$
	CLC
	LDA QUOT+1
	ADC DIVSOR
	STA QUOT+1
	LDA QUOT+2
	ADC DIVSOR+1
	STA QUOT+2
25$:	LSR QUOT+2
	ROR QUOT+1
	DEY
	BNE 20$
;MIN:=(MIN/MAX)*LIMIT
	LDA QUOT+1
	STA ZX,HABS		;MOVE IT BACK
	LDA QUOT+2
	STA ZX,HABS+1
SL.C45:	LDA ZX,HABS+1		;SPEED-LIMIT. CHECK FOR 45 DEG
	STA K
	LDA ZX,HABS
	LSR
	ROR K
	LSR
	ROR K			;J,K <- (MAX(HABS,VABS)/4)
	EOR I,0FF
	CLC
	ADC ZX,HABS
	STA J			;J <- LSB (MAX(ETC.)*3/4)
	LDA ZX,HABS+1
	SBC K
	STA K			;J,K = 3/4*(MAX(HABS,VABS))
	TXA
	EOR I,2			;(PING-PONG)
	TAX			;BACK TO MIN
	LDY ZX,HABS
	CPY J
	LDA ZX,HABS+1
	SBC K			;COMPARE MIN TO 3/4 MAX
	BCC RECON		;BRANCH IF 3/4 MAX GREATER, JUST RECONSTITUTE
	STY L			;L := LSB(MIN)
	LSR
	ROR L
	LSR
	ROR L			;ACC, L=MIN/4
	EOR I,0FF
	TAY
	LDA ZX,HABS
	SEC
	SBC L
	STA ZX,HABS
	TYA
	ADC ZX,HABS+1		;(A*X+B)-(C**+D)=B-D+X*(-C+D)
	STA ZX,HABS+1		;MIN := 3/4 * MIN
	TXA
	EOR I,2			;(PONG-PING)
	TAX			;BACK TO MAX
	LDA J
	STA ZX,HABS
	LDA K
	STA ZX,HABS+1		;MAX := 3/4 * MAX
RECON:	LDA VABS
	ASL
	ROL VABS+1
	ASL
	ROL VABS+1
	ASL
	ROL VABS+1		;VABS := VABS*8
	STA VABS
	LDX I,2
62$:	LDA ZX,THINC+1
	CMP I,80		;CARRY=ORIG SIGN
	LDY ZX,HABS
	LDA ZX,HABS+1
	BCC 65$
	TYA
	EOR I,0FF
	ADC I,0			;CARRY SET (AFTER BCC) SO ADDS 1
	TAY
	LDA ZX,HABS+1
	EOR I,0FF
	ADC I,0			;FINISH D.P. NEGATE
65$:	STA ZX,THINC+1
	STY ZX,THINC
	DEX
	DEX
	BPL 62$
70$:	PLA			;GET ORIG X BACK
	TAX			;POINT BACK TO OBJECT
	RTS

	.SBTTL COLLISIONS
	.SBTTL	COLL. LOOP
COLCHK: TXA
	STX OBJECT		;SAVE OBJECT #
	TAY
1$:	DEY
	DEY			;COMPARE TO NEXT DOWN
	BMI 5$
	JSR COLLIS
	BCS 1$
	JSR COLMOV
	JMP 1$
5$:	RTS

	.SBTTL	COLL.CHECK
COLLIS:	LDA AX,VPOS
	SEC
	SBC AY,VPOS
	STA VDISP
	BCS 2$
	EOR I,0FF
	ADC I,1			;TAKE !DELTA V!
2$:	CMP I,8			;<8?
	BCS 1$			;NO, SKIP
	STA AVVD		;ABS VALUE OF VERT. DIFFERENCE
	LDA AX,HPOSL
	SEC
	SBC AY,HPOSL
	STA AVHDL
	STA HDISP
	LDA AX,HPOSH
	SBC AY,HPOSH
	STA AVHDH
	STA HDISP+1
	BCS 25$			;BRANCH IF DIFFERENCE IS POSITIVE
	EOR I,0FF		;ELSE DO D.P. NEGATE
	STA AVHDH
	LDA AVHDL
	EOR I,0FF
	ADC I,20
	STA AVHDL
	LDA AVHDH
	ADC I,0
	STA AVHDH
25$:	BEQ 26$
1$:	SEC
	RTS
26$:	LDA AVHDL
	LSR
	LSR
	LSR
	LSR
	LSR			;MATCH V-SCALE
	CLC
	ADC AVVD		;DO OCTAGON
	CMP I,12.
	BCS 1$			;NO COLLISION
	CPX I,BALLNO*2		;BALL?
	BNE 3$			;NOT BALL
	JSR BALCOL		;CHK BALL COLLIS & RETURN
	LDA WHYEND		;END OF PLAY
	BEQ 1$			;NO, CONT.
27$:	PLA			;ESLE KILL
	PLA			;RTN ADDR
	RTS			;RTN TO CALLER OF COLLIS
3$:	LDA AY,HPICT
	EOR AX,HPICT
	LSR
	LDA AY,FLAGS		;SET INDIV. COLLISION FLAGS
	ORA I,1
	BCC 35$
	ORA I,4
35$:	STA AY,FLAGS
	LDA AX,FLAGS
	ORA I,1
	BCC 37$
	ORA I,4
37$:	STA AX,FLAGS
	CPY HASBAL		;DOES Y -> BALL CARRIER
	BNE 56$			;NO, CHECK X
	LDA AX,HPICT		;IS X DEFENSE
	LSR
	BCC 58$			;YES, TACKLE
56$:	CPX HASBAL		;DOES X -> BALL CARRIER
	BNE 6$			;NO, RETURN
	LDA AY,HPICT		;IS Y DEFENSE
	LSR
	BCS 6$			;NO, SKIP
58$:	LDA I,EC.TKL		;"TACKLE"
	STA WHYEND		;IS END CONDITION
	JMP 27$			;ABORT CHECK
6$:	CLC			;FLAG COLLISION
	RTS			;RETURN
	.SBTTL	COLLISION MOVE
;MOVE PLAYER(X) & PLAYER(Y) OUT OF COLLISION
COLMOV:	CLC			;BE PREPARED
	LDA VDISP		;GET VERT DISP (V(X)-V(Y))
	BPL 1$			;IF PLUS, SUBTRACT 8
	ADC I,8			;ELSE ADD 8
	JMP 2$			;*** THIS COULD BE A BPL(?)
1$:	ADC I,-8
2$:	CMP I,80		;MERGE HERE WITH ACC=VDISP+/-8
	ROR			;"ASR" TO TAKE HALF
	STA VDISP		;SAVE (VDISP+/-8)/2
	CLC
	LDA HDISP+1		;REPEAT FOR HDISP
	BPL 3$
	ADC I,1			;8 DOTS IS 1 IN MS BYTE
	JMP 4$
3$:	ADC I,-1
4$:	CMP I,80
	ROR
	STA HDISP+1		;SAVE MS BYTE
	LDA HDISP		;FINISH DIVIDE BY 2
	ROR
	STA HDISP
	LDA AVHDL		;PRE-SHIFTED
	LSR
	LSR
	LSR
	LSR
	LSR
	CMP AVVD		;WHO'S IN MOST
	BEQ 6$			;SAME, DO BOTH
	LDA I,0
	BCS 5$			;H LEAST, KILL V
	STA HDISP+1		;ELSE KILL H
	STA HDISP
	BEQ 6$
5$:	STA VDISP
6$:	LDA VDISP
	CLC
	ADC AY,VPOS		;ADD TO V(Y) CUZ IT'S NEG
	STA AY,VPOS		;OF WHAT IT SHOULD BE
	SEC
	LDA AX,VPOS		;SIMILARLY, SUB FROM V(X)
	SBC VDISP
	STA AX,VPOS
	LDA HDISP
	CLC
	ADC AY,HPOSL		;AGAIN ADD TO (Y)
	STA AY,HPOSL
	LDA HDISP+1
	ADC AY,HPOSH
	STA AY,HPOSH
	LDA AX,HPOSL		;THEN SUB FROM (X)
	SEC
	SBC HDISP
	STA AX,HPOSL
	LDA AX,HPOSH
	SBC HDISP+1
	STA AX,HPOSH
	RTS
	.SBTTL	BALL-COLLISION
BALCOL:	LDA WFLAG
	AND I,6			;HAS BALL GOTTEN TO QB?
	BEQ 15$			;NO, SKIP
	LDA A,FLAGS+28.		;CHECK BALLS FLAGS
	AND I,2			;PASS?
	BEQ 10$			;NO
	LDA AY,HPICT
	LSR			;OFFENSE?
	BCS C.PASR		;YES, CHECK RECVR'S
	JMP C.INTC		;ELSE CHECK INTERCEPT

10$:	LDA AY,HPICT
	LSR
	BCS 20$			;OFFENSE, CHECK FOR QB
	LDX I,EC.TKL		;SET "TACKLE"
	STX WHYEND		;TO END PLAY
	LDX I,28.		;INSURANCE
15$:	RTS
20$:	LDA HASBAL		;FREE BALL
	BPL 30$		;NO, SKIP
	TYA			;GET MAN #
	AND I,1C		;IGNORE TEAM #
	CMP I,14		;QB?
	BNE 30$			;NO, SKIP
	STY HASBAL		;ELSE MARK BALL AS HIS
30$:	RTS
C.PASR:	LDA HASBAL		;DOES SOMEONE ALREADY HAVE IT
	BPL 20$			;IF SO, SKIP
	CPY REC1		;DID REC CATCH IT
	BNE 20$			;NOPE
10$:	LDX REC1		;THEN GET RIGHT ONE
11$:	JSR SCANJ		;SCAN UP TO "JOY"
	JSR D.JOY		;FINISH DECODE
	STX HASBAL
	LDA I,-1
	STA REC1		;RESET RECEIVER
	LDA I,0
	STA A,FLAGS+<BALLNO*2>	;RESET BALL'S FLAGS
	LDX I,28.		;RESTORE X
	JSR DECODE		;BUMP BALL
	LDY HASBAL		;RESTORE Y AND PICK UP COLCHK
20$:	RTS			;WHERE WE LEFT OFF
C.PRER:	BRK			;BLOW UP
SCANJ:	JSR INCMCC
	LDA NX,MCC
	STA ZX,OP		;FETCH OP
	BEQ C.PRER		;"END" HERE IS ERROR
	JSR INCMCC
	LDA NX,MCC
	STA ZX,PARAM		;DO FIRST PART OF DECODE
	LDA ZX,OP
	CMP I,1			;"JOYSTICK"?
	BNE SCANJ		;NO, KEEP SCANNING
	RTS
CKS2:	.BYTE 051
;CHECK FOR WITHIN RANGE OF ELIGIBLE RECEIVER
C.INTC:	LDA HASBAL		;FREE BALL?
	BPL 20$			;NO, SKIP
	LDA PARAM+28.		;CHECK PASS TIMER
	CMP I,4			;NEAR END
	BCS 6$			;NO, CHECK REC.
4$:	STY HASBAL
	LDA I,EC.INT		;ELSE SET CODE
	STA WHYEND		;FOR INTER.
	BNE 20$			;ALWAYS
6$:	LDX REC1		;CHECK RECEIVER
	BMI 20$			;BRANCH IF NONE
	JSR C.INRG		;IN RANGE?
20$:	LDX I,28.		;RESET X(Y NOT DISTURBED)
	RTS
C.INRG:	LDA AX,VPOS		;REC. VERT POS
	SEC
	SBC AY,VPOS		;DEF. VERT POS
	BCS 10$
	EOR I,0FF
	ADC I,1			;ABS VAL
10$:	CMP I,20.
	BCS 30$			;TOO FAR
	LDA AX,HPOSL
	SEC
	SBC AY,HPOSL
	STA K
	LDA AX,HPOSH
	SBC AY,HPOSH		;D.P. SUBTRACT
	BCS 20$			;BRANCH IF "POSITIVE"
	EOR I,0FF
	PHA
	LDA K
	EOR I,0FF
	ADC I,20
	STA K
	PLA
	ADC I,0			;D.P. NEGATE
20$:	ASL K
	ROL
	BCS 30$			;DEFINITELY TOO FAR
	CMP I,5
	BCS 30$			;TOO FAR
	LDA DOWN
	CMP I,4
	LDA I,EC.INC
	BCS 25$
	BIT INTCNT
	BMI 25$
	BVS 25$
	LDA I,EC.INT		;INTERCEPTION
	STY HASBAL
25$:	STA WHYEND
30$:	RTS
	.SBTTL SCROLL-FIELD STUFF
	.SBTTL	RESET SCROLL-FIELD
RSF:	LDA I,14.		;START AT 4 YD LINE (14 YDS FROM END)
	STA SFDH
	LDA I,20
	STA SFDL
	STA SCRDIR		;D7 CLEAR
1$:	LDY I,1			;SET SPEED 1-1/2 DOTS/FRAME
	JSR SCROLL		;WRITE A PAIR OF COLUMNS
	LDA SFDH
	CMP I,45.		;STOP 30 YDS LATER
	BCC 1$
	RTS
	
	.SBTTL BALL-TRACKER
;THIS CODE ATTEMPTS TO KEEP THE BALL CENTERED ON SCREEN
TRACK:	LDA OFFENS		;0 OR 2
	ASL			;0, 4
	ASL			;0, 8
	ADC I,11.		;11, 19
	ADC SFDH		;OFFSET "CENTER" OF SCREEN
	PHA
	LDA SFDL
	SEC
	SBC A,BHPOSL		;FIRST HALF OF D.P. COMPARE
	TAY
	PLA
	SBC A,BHPOSH		;COMPARE TO BALL POSN
	BCS 1$
	EOR I,0FF		;TAKE ABS. VAL.
	PHA
	TYA
	ADC I,20
	PLA
	ADC I,0
	CLC			;KEEP CARRY CLEAR
1$:	ROR SCRDIR		;SET D7 OF SCRDIR FOR DIRECTION
	LDY I,3
2$:	CMP AY,TMTAB-1	;!DIST!-3,6,9
	BCS SCROLL	;BRANCH IF!DIST!LARGER
	DEY
	BNE 2$
25$:	RTS
TMTAB:	.BYTE 3,6,9
	
	.SBTTL	SCROLLING
SCROLL:	STY SCRSPD		;SAVE SPEED
	INC SLOCK		;INTERLOCK FOR UPDATE
	LDA FRAME
	LSR
	BCS 5$
10$:	LDA SCRDIR
	ASL			;GET DIRECTION INTO CARRY
	LDA SFDL
	LDY SFDH
	BCS 2$		;IF CARRY SET, SUBTRACT TO MOVE RIGHT
	CPY I,FL-30.	;ELSE CHECK FOR END OF FIELD
	BCS 6$		;ALREADY THERE, SKIP THE ADD
1$:	ADC I,20	;BUMP BY ONE DOT
	BCC 4$
	INC SFDH
	BNE 4$		;*** ALWAYS

2$:	BNE 3$		;"Y" NON-ZERO, OK
	AND I,0E0	;CLEAR ANY TRASH AND TEST ACC
	BEQ 6$		;POSN 0, DON'T DECREMENT
3$:	SBC I,20	;BUMP RIGHT ONE DOT
	BCS 4$		;CARRY IS NOT-BORROW
	DEC SFDH	;ELSE BORROW FROM HIGH BYTE

4$:	STA SFDL
	AND I,0E0
	BNE 5$
	JSR REWRT	;ON BOUNDARY, RE-WRITE BOTH ENDS
5$:	DEC SCRSPD
	BPL 10$
6$:	LSR SLOCK	;RELEASE INTERLOCK
	RTS

	.SBTTL	RE-WRITE SCROLL FIELD
;REWRITE BOTH END OF SCROLL-FIELD
REWRT:	LDA SFDH		;GET UPPER 8 BITS OF SFD
	CLC
	ADC I,30.		;OFFSET TO RIGHT OF SCREEN
	JSR WCOL		;WRITE THAT COLUMN
	LDA SFDH		;GET YARDS BACK
	SEC
	SBC I,1			;OFFSET ONE COL TO LEFT
	BCS WCOL		;IF THERE IS ONE, WRITE IT & RETURN
	RTS			;ELSE SKIP IT
WCOL:	STA SCRYDS		;SAVE YARD #
	AND I,1F		;MODULO 32
	STA ADL			;POINT TO INVISIBLE COLUMN
	LDA I,SCRFLD/100	;BUILD POINTER TO SCROLL FIELD
	STA ADH
	LDA SCRYDS		;GET YARDS BACK
	CLC
	ADC I,1			;OFFSET BECAUSE 0 IS THE FIRST YARD
	CMP I,11.		;IN LEFT END ZONE?
	BCC 1$			;YES, FLAG IT
	CMP I,111.		;RIGHT END ZONE?
	BCC 2$			;NO, SKIP
1$:	INC EZFLG
2$:	LDX I,0
3$:	CMP I,5			;DIVIDE BY 5
	BCC 4$
	INX
	SBC I,5			;WITH REPEATED SUB.
	BCS 3$			;***ALWAYS
4$:	TAY			;SAVE REM.
	TXA			;GET QUOT TO ACC.
	LSR			;(YARDS/5)/2=YARDS/10
	STA Y10			;STORE "YARDS OVER 10"
SIDES:	TYA			;GET REM BACK
	CMP I,2			;CHECK FOR 2,3,4
	BCS 3$			;YES, LEAVE BLANK
	LDA AX,YLTBL		;GET CHAR, WITH ARROW BITS IN TOP
	STA ARDIR		;SAVE IT, FOR ARROW BITS
	AND I,3F		;STRIP ARROW BITS
	TAX			;STASH PICT IN X
	TYA			;GET REM BACK
	LSR			;FIRST OR SECOND HALF OF PICT?
	TXA			;(PICT -> ACC)
	BCS 2$			;BRANCH IF SECOND HALF
	CMP I,6			;FIRST LINE, IS IT A NUMBER?
	BCC 5$			;NO, LEAVE IT BE
	LDA I,4			;ELSE PUT "0" ON TOP
	ASL ARDIR		;SHIFT CORECT ARROW BIT INTO SIGN
	BNE 25$			;OUTPUT ACC ON TOP, X ON BOTTOM
2$:	ORA I,40		;SECOND LINE, FLIP PICT
	TAX			;COPY TO X
	CMP I,46		;NUMBER?
	BCC 5$			;NO,JUST OUTPUT
	LDX I,44		;ELSE SET X TO FLIPPED "0"
25$:	ASL ARDIR		;SHOULD WE ADD AN ARROW?
	BCC 5$			;NO, SKIP
	ORA I,1			;ELSE ADD IT
	INX			;BOTH TOP AND BOTTOM
	BNE 5$			;***ALWAYS

3$:	LDA I,SIDELN		;MAKE IT A SIDE-LINE ONLY
	TAX			;TOP & BOTTOM
5$:	ORA I,80		;FLIP VERT. FOR TOP OF SCREEN
	LDY I,0
	STA NY,ADL		;STORE PICT FROM ACC
	LDA I,SCRFLD/100+3
	STA ADH			;POINT TO BOTTOM OF SCREEN
	LDY I,0A0
	TXA
	STA NY,ADL		;STORE PICT FROM X

;NOW, FILL CENTER OF SCREEN WITH BLANKS OR YARDLINES
FILLIN:	EOR I,SIDELN		;IS PIC. SIDELINE?
	BEQ 1$			;YES, MAKE BLANK
	CMP I,40		;"FLIPPED" SIDELINE
	BEQ 1$			;YES, BLANK IT
	EOR I,SIDELN		;RESTORE PIC
	BIT A,M3E		;END-ZONE CORNER?
	BEQ 10$			;YES, MAKE IT FAT
	AND I,0C0		;ELSE LEAVE ONLY REFLECT BITS
10$:	ORA I,10		;AND MAKE IT A YARD LINE/END-ZONE LINE
1$:	STA J			;SAVE CHAR
	LDX I,27.		;28 LINES TO FILL
	LDA I,SCRFLD/100	;SET TOP OF PTR
	STA ADH
	LDY I,20		;OFFSET ONE LINE
2$:	LDA J			;GET CHAR
	STA NY,ADL		;STASH IT
	TYA			;USE OFFSET
	CLC
	ADC ADL			;TO BUMP LOW PTR
	STA ADL
	BCC 3$
	INC ADH			;BUMP HIGH PTR
3$:	DEX			;COUNT LINES
	BPL 2$			;TILL DONE
	LSR EZFLG		;ARE WE IN ENDZONE
	BCS 5$			;YES, SKIP HASH-MARKS
	LDA I,SCRFLD/100+1
	STA ADH			;POINT TO X(80+(0-1F)
	LDY I,0
	LDA J			;CHECK CHAR
	BIT A,M3F		;BLANK? (6 LSB'S=0) [BIT I,3F]
	BNE 4$			;NO SKIP
	ORA I,0F		;ELSE MAKE HASH MARK-3
4$:	CLC
	ADC I,3			;ADD HASH MARK TO YARD LINE
	STA NY,ADL
	LDY I,0A0		;POINT TO X220+(0-1F)
	STA NY,ADL
	LDA A,OPTION
	AND I,8			;SW. 3
	BEQ DOLOGO		;BRANCH IF ON
5$:	RTS
YLTBL:	.BYTE 1,3,4,2,46,2,48,2,4A,2,4C,2,0CE,2,8C,2,8A,2,88,2,86,2,4,3,1
M3E:	.BYTE 3E
M3F:	.BYTE 3F
	.SBTTL	DRAW LOGO
DOLOGO:	LDA SCRYDS		;GET YARDLINE WE'RE DOING
	SEC
	SBC I,FL/2-2		;IN CENTER OF FIELD
	BCC 2$			;NO, OFF TO LEFT
	CMP I,4			;FOUR STAMPS WIDE
	BCS 2$			;OFF TO RIGHT
	ORA I,30		;LOGO IS LAST 16 STAMPS
	TAX			;SAVE INX
	LDY I,20		;POINT TO X1A0 + (0-1F)
1$:	TXA			;GET PROPER STAMP
	STA NY,ADL		;STORE IN SCROLL FIELD
	ADC I,4			;BUMP TO NEXT STAMP
	TAX			;SAVE STAMP
	TYA
	ADC I,20		;BUMP TO NEXT ROW
	TAY
	CPX I,40		;LAST STAMP?
	BCC 1$			;NO, LOOP
2$:	RTS			;DONE
	.END
                                                                                                                                                                                                                                                                                                                                                                                                                                                                